(function() {var implementors = {};
implementors["cranelift_codegen"] = [{"text":"impl Into&lt;i64&gt; for Imm64","synthetic":false,"types":[]},{"text":"impl Into&lt;u64&gt; for Uimm64","synthetic":false,"types":[]},{"text":"impl Into&lt;u32&gt; for Uimm32","synthetic":false,"types":[]},{"text":"impl Into&lt;i64&gt; for Uimm32","synthetic":false,"types":[]},{"text":"impl Into&lt;i32&gt; for Offset32","synthetic":false,"types":[]},{"text":"impl Into&lt;i64&gt; for Offset32","synthetic":false,"types":[]},{"text":"impl Into&lt;Vec&lt;VerifierError&gt;&gt; for VerifierErrors","synthetic":false,"types":[]},{"text":"impl Into&lt;Result&lt;(), VerifierErrors&gt;&gt; for VerifierErrors","synthetic":false,"types":[]}];
implementors["cranelift_codegen_meta"] = [{"text":"impl Into&lt;DummyExpr&gt; for DummyVar","synthetic":false,"types":[]},{"text":"impl Into&lt;DummyExpr&gt; for Literal","synthetic":false,"types":[]},{"text":"impl Into&lt;DummyExpr&gt; for DummyConstant","synthetic":false,"types":[]},{"text":"impl Into&lt;InstructionPredicate&gt; for InstructionPredicateNode","synthetic":false,"types":[]},{"text":"impl&lt;'_&gt; Into&lt;InstSpec&gt; for &amp;'_ Rc&lt;InstructionContent&gt;","synthetic":false,"types":[]},{"text":"impl Into&lt;InstSpec&gt; for BoundInstruction","synthetic":false,"types":[]},{"text":"impl&lt;'_&gt; Into&lt;OperandKind&gt; for &amp;'_ TypeVar","synthetic":false,"types":[]},{"text":"impl&lt;'_&gt; Into&lt;OperandKind&gt; for &amp;'_ OperandKind","synthetic":false,"types":[]},{"text":"impl Into&lt;OperandConstraint&gt; for RegClassIndex","synthetic":false,"types":[]},{"text":"impl Into&lt;OperandConstraint&gt; for Register","synthetic":false,"types":[]},{"text":"impl Into&lt;OperandConstraint&gt; for usize","synthetic":false,"types":[]},{"text":"impl Into&lt;OperandConstraint&gt; for Stack","synthetic":false,"types":[]},{"text":"impl Into&lt;PresetType&gt; for BoolSettingIndex","synthetic":false,"types":[]},{"text":"impl Into&lt;PresetType&gt; for PresetIndex","synthetic":false,"types":[]},{"text":"impl Into&lt;PredicateNode&gt; for BoolSettingIndex","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Into&lt;PredicateNode&gt; for (BoolSettingIndex, &amp;'a SettingGroup)","synthetic":false,"types":[]},{"text":"impl&lt;'_&gt; Into&lt;TypeVar&gt; for &amp;'_ TypeVar","synthetic":false,"types":[]},{"text":"impl Into&lt;TypeVar&gt; for ValueType","synthetic":false,"types":[]},{"text":"impl Into&lt;Interval&gt; for Range&lt;u16&gt;","synthetic":false,"types":[]}];
implementors["cranelift_codegen_shared"] = [{"text":"impl Into&lt;u8&gt; for OpcodePrefix","synthetic":false,"types":[]}];
implementors["cranelift_entity"] = [{"text":"impl&lt;T:&nbsp;ReservedValue&gt; Into&lt;Option&lt;T&gt;&gt; for PackedOption&lt;T&gt;","synthetic":false,"types":[]}];
implementors["wiggle_test"] = [{"text":"impl Into&lt;Vec&lt;MemArea&gt;&gt; for MemAreas","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()