(function() {var implementors = {};
implementors["clif_json"] = [{"text":"impl Freeze for SerInst","synthetic":true,"types":[]},{"text":"impl Freeze for SerBlock","synthetic":true,"types":[]},{"text":"impl Freeze for SerDataFlowGraph","synthetic":true,"types":[]},{"text":"impl Freeze for SerSignature","synthetic":true,"types":[]},{"text":"impl Freeze for SerFunction","synthetic":true,"types":[]},{"text":"impl Freeze for SerObj","synthetic":true,"types":[]},{"text":"impl Freeze for SerInstData","synthetic":true,"types":[]}];
implementors["clif_util"] = [{"text":"impl Freeze for TestOptions","synthetic":true,"types":[]},{"text":"impl Freeze for PassOptions","synthetic":true,"types":[]},{"text":"impl Freeze for CompiledWithoutSupportOptions","synthetic":true,"types":[]},{"text":"impl Freeze for Commands","synthetic":true,"types":[]},{"text":"impl Freeze for Options","synthetic":true,"types":[]},{"text":"impl Freeze for RemoveInst","synthetic":true,"types":[]},{"text":"impl Freeze for ReplaceInstWithConst","synthetic":true,"types":[]},{"text":"impl Freeze for ReplaceInstWithTrap","synthetic":true,"types":[]},{"text":"impl Freeze for MoveInstToEntryBlock","synthetic":true,"types":[]},{"text":"impl Freeze for RemoveBlock","synthetic":true,"types":[]},{"text":"impl Freeze for ReplaceBlockParamWithConst","synthetic":true,"types":[]},{"text":"impl Freeze for RemoveUnusedEntities","synthetic":true,"types":[]},{"text":"impl Freeze for MergeBlocks","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for CrashCheckContext&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ProgressStatus","synthetic":true,"types":[]},{"text":"impl Freeze for CheckResult","synthetic":true,"types":[]},{"text":"impl Freeze for Options","synthetic":true,"types":[]},{"text":"impl Freeze for Options","synthetic":true,"types":[]},{"text":"impl Freeze for PrintRelocs","synthetic":true,"types":[]},{"text":"impl Freeze for PrintTraps","synthetic":true,"types":[]},{"text":"impl Freeze for PrintStackMaps","synthetic":true,"types":[]},{"text":"impl Freeze for Options","synthetic":true,"types":[]},{"text":"impl Freeze for FileInterpreter","synthetic":true,"types":[]},{"text":"impl Freeze for FileInterpreterFailure","synthetic":true,"types":[]},{"text":"impl Freeze for Options","synthetic":true,"types":[]},{"text":"impl Freeze for Options","synthetic":true,"types":[]},{"text":"impl Freeze for OwnedFlagsOrIsa","synthetic":true,"types":[]},{"text":"impl Freeze for Options","synthetic":true,"types":[]},{"text":"impl Freeze for Options","synthetic":true,"types":[]},{"text":"impl Freeze for Options","synthetic":true,"types":[]},{"text":"impl Freeze for Color","synthetic":true,"types":[]}];
implementors["cranelift_bforest"] = [{"text":"impl&lt;K, V&gt; Freeze for Map&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, C&gt; Freeze for MapCursor&lt;'a, K, V, C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for MapForest&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for MapIter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Freeze for Set&lt;K&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, C&gt; Freeze for SetCursor&lt;'a, K, C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Freeze for SetForest&lt;K&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K&gt; Freeze for SetIter&lt;'a, K&gt;","synthetic":true,"types":[]}];
implementors["cranelift_codegen"] = [{"text":"impl Freeze for Context","synthetic":true,"types":[]},{"text":"impl Freeze for ValueLocRange","synthetic":true,"types":[]},{"text":"impl Freeze for CodegenError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for MemoryCodeSink&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for NullRelocSink","synthetic":true,"types":[]},{"text":"impl Freeze for NullStackMapSink","synthetic":true,"types":[]},{"text":"impl Freeze for NullTrapSink","synthetic":true,"types":[]},{"text":"impl Freeze for StackMap","synthetic":true,"types":[]},{"text":"impl Freeze for RegDiversions","synthetic":true,"types":[]},{"text":"impl Freeze for CodeInfo","synthetic":true,"types":[]},{"text":"impl Freeze for Reloc","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for CFGPrinter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'f&gt; Freeze for FuncCursor&lt;'f&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'f&gt; Freeze for EncCursor&lt;'f&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for CursorPosition","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for DisplayList&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for DominatorTree","synthetic":true,"types":[]},{"text":"impl Freeze for DominatorTreePreorder","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ChildIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for BlockPredecessor","synthetic":true,"types":[]},{"text":"impl Freeze for ControlFlowGraph","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for PredIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'f, IIB&gt; Freeze for InsertBuilder&lt;'f, IIB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;IIB: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'f&gt; Freeze for ReplaceBuilder&lt;'f&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for AbiParam","synthetic":true,"types":[]},{"text":"impl Freeze for ExtFuncData","synthetic":true,"types":[]},{"text":"impl Freeze for Signature","synthetic":true,"types":[]},{"text":"impl Freeze for HeapData","synthetic":true,"types":[]},{"text":"impl Freeze for MemFlags","synthetic":true,"types":[]},{"text":"impl Freeze for ProgramPoint","synthetic":true,"types":[]},{"text":"impl Freeze for SourceLoc","synthetic":true,"types":[]},{"text":"impl Freeze for TableData","synthetic":true,"types":[]},{"text":"impl Freeze for ValueLabel","synthetic":true,"types":[]},{"text":"impl Freeze for ValueLabelStart","synthetic":true,"types":[]},{"text":"impl Freeze for AtomicRmwOp","synthetic":true,"types":[]},{"text":"impl Freeze for ArgumentExtension","synthetic":true,"types":[]},{"text":"impl Freeze for ArgumentPurpose","synthetic":true,"types":[]},{"text":"impl Freeze for ExternalName","synthetic":true,"types":[]},{"text":"impl Freeze for GlobalValueData","synthetic":true,"types":[]},{"text":"impl Freeze for HeapStyle","synthetic":true,"types":[]},{"text":"impl Freeze for LibCall","synthetic":true,"types":[]},{"text":"impl Freeze for ExpandedProgramPoint","synthetic":true,"types":[]},{"text":"impl Freeze for TrapCode","synthetic":true,"types":[]},{"text":"impl Freeze for ArgumentLoc","synthetic":true,"types":[]},{"text":"impl Freeze for ValueLoc","synthetic":true,"types":[]},{"text":"impl Freeze for ValueLabelAssignments","synthetic":true,"types":[]},{"text":"impl Freeze for ConstantData","synthetic":true,"types":[]},{"text":"impl Freeze for ConstantPoolEntry","synthetic":true,"types":[]},{"text":"impl Freeze for ConstantPool","synthetic":true,"types":[]},{"text":"impl Freeze for DataFlowGraph","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for DisplayInst&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ValueDef","synthetic":true,"types":[]},{"text":"impl Freeze for Block","synthetic":true,"types":[]},{"text":"impl Freeze for Value","synthetic":true,"types":[]},{"text":"impl Freeze for Inst","synthetic":true,"types":[]},{"text":"impl Freeze for StackSlot","synthetic":true,"types":[]},{"text":"impl Freeze for GlobalValue","synthetic":true,"types":[]},{"text":"impl Freeze for Constant","synthetic":true,"types":[]},{"text":"impl Freeze for Immediate","synthetic":true,"types":[]},{"text":"impl Freeze for JumpTable","synthetic":true,"types":[]},{"text":"impl Freeze for FuncRef","synthetic":true,"types":[]},{"text":"impl Freeze for SigRef","synthetic":true,"types":[]},{"text":"impl Freeze for Heap","synthetic":true,"types":[]},{"text":"impl Freeze for Table","synthetic":true,"types":[]},{"text":"impl Freeze for AnyEntity","synthetic":true,"types":[]},{"text":"impl Freeze for Function","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for DisplayFunctionAnnotations&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for DisplayFunction&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for InstOffsetIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Imm64","synthetic":true,"types":[]},{"text":"impl Freeze for Uimm64","synthetic":true,"types":[]},{"text":"impl Freeze for Uimm32","synthetic":true,"types":[]},{"text":"impl Freeze for V128Imm","synthetic":true,"types":[]},{"text":"impl Freeze for Offset32","synthetic":true,"types":[]},{"text":"impl Freeze for Ieee32","synthetic":true,"types":[]},{"text":"impl Freeze for Ieee64","synthetic":true,"types":[]},{"text":"impl Freeze for VariableArgs","synthetic":true,"types":[]},{"text":"impl Freeze for OpcodeConstraints","synthetic":true,"types":[]},{"text":"impl Freeze for ValueTypeSet","synthetic":true,"types":[]},{"text":"impl Freeze for InstructionFormat","synthetic":true,"types":[]},{"text":"impl Freeze for InstructionData","synthetic":true,"types":[]},{"text":"impl Freeze for Opcode","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for BranchInfo&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for CallInfo&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ResolvedConstraint","synthetic":true,"types":[]},{"text":"impl Freeze for JumpTableData","synthetic":true,"types":[]},{"text":"impl Freeze for Layout","synthetic":true,"types":[]},{"text":"impl&lt;'f&gt; Freeze for Blocks&lt;'f&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'f&gt; Freeze for Insts&lt;'f&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for StackSlotData","synthetic":true,"types":[]},{"text":"impl Freeze for StackLayoutInfo","synthetic":true,"types":[]},{"text":"impl Freeze for StackSlots","synthetic":true,"types":[]},{"text":"impl Freeze for StackSlotKind","synthetic":true,"types":[]},{"text":"impl Freeze for Type","synthetic":true,"types":[]},{"text":"impl Freeze for BranchRange","synthetic":true,"types":[]},{"text":"impl Freeze for OperandConstraint","synthetic":true,"types":[]},{"text":"impl Freeze for RecipeConstraints","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Encodings&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for EncInfo","synthetic":true,"types":[]},{"text":"impl Freeze for Encoding","synthetic":true,"types":[]},{"text":"impl Freeze for StackBaseMask","synthetic":true,"types":[]},{"text":"impl Freeze for StackRef","synthetic":true,"types":[]},{"text":"impl Freeze for Builder","synthetic":true,"types":[]},{"text":"impl Freeze for TargetFrontendConfig","synthetic":true,"types":[]},{"text":"impl Freeze for CallConv","synthetic":true,"types":[]},{"text":"impl Freeze for ConstraintKind","synthetic":true,"types":[]},{"text":"impl Freeze for StackBase","synthetic":true,"types":[]},{"text":"impl Freeze for LookupError","synthetic":true,"types":[]},{"text":"impl Freeze for UnwindInfo","synthetic":true,"types":[]},{"text":"impl Freeze for UnwindInfo","synthetic":true,"types":[]},{"text":"impl Freeze for RegisterMappingError","synthetic":true,"types":[]},{"text":"impl Freeze for UnwindInfo","synthetic":true,"types":[]},{"text":"impl Freeze for RegBank","synthetic":true,"types":[]},{"text":"impl Freeze for RegClassData","synthetic":true,"types":[]},{"text":"impl Freeze for RegClassIndex","synthetic":true,"types":[]},{"text":"impl Freeze for RegInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for DisplayRegUnit&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Loop","synthetic":true,"types":[]},{"text":"impl Freeze for LoopAnalysis","synthetic":true,"types":[]},{"text":"impl Freeze for MachCompileResult","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for MachTerminator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for InstColor","synthetic":true,"types":[]},{"text":"impl Freeze for LowerInput","synthetic":true,"types":[]},{"text":"impl&lt;'func, I&gt; Freeze for Lower&lt;'func, I&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for RelocDistance","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for VCode&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for VCodeBuilder&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for BlockLoweringOrder","synthetic":true,"types":[]},{"text":"impl Freeze for LoweredBlock","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; Freeze for ABICalleeImpl&lt;M&gt;","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; Freeze for ABICallerImpl&lt;M&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ABIArg","synthetic":true,"types":[]},{"text":"impl Freeze for ArgsOrRets","synthetic":true,"types":[]},{"text":"impl Freeze for InstIsSafepoint","synthetic":true,"types":[]},{"text":"impl Freeze for StackAMode","synthetic":true,"types":[]},{"text":"impl Freeze for CallDest","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for MachBuffer&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as MachInst&gt;::LabelUse: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for MachBufferFinalized","synthetic":true,"types":[]},{"text":"impl Freeze for MachLabel","synthetic":true,"types":[]},{"text":"impl Freeze for MachSrcLoc","synthetic":true,"types":[]},{"text":"impl Freeze for MachStackMap","synthetic":true,"types":[]},{"text":"impl Freeze for StackMapExtent","synthetic":true,"types":[]},{"text":"impl Freeze for TargetIsaAdapter","synthetic":true,"types":[]},{"text":"impl Freeze for AtomicRmwOp","synthetic":true,"types":[]},{"text":"impl Freeze for Builder","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for PredicateView&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Flags","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for FlagsOrIsa&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SetError","synthetic":true,"types":[]},{"text":"impl Freeze for Regalloc","synthetic":true,"types":[]},{"text":"impl Freeze for OptLevel","synthetic":true,"types":[]},{"text":"impl Freeze for TlsModel","synthetic":true,"types":[]},{"text":"impl Freeze for LibcallCallConv","synthetic":true,"types":[]},{"text":"impl Freeze for Template","synthetic":true,"types":[]},{"text":"impl Freeze for Descriptor","synthetic":true,"types":[]},{"text":"impl Freeze for Detail","synthetic":true,"types":[]},{"text":"impl Freeze for PassTimes","synthetic":true,"types":[]},{"text":"impl Freeze for TimingToken","synthetic":true,"types":[]},{"text":"impl Freeze for VerifierError","synthetic":true,"types":[]},{"text":"impl Freeze for VerifierErrors","synthetic":true,"types":[]},{"text":"impl Freeze for PlainWriter","synthetic":true,"types":[]}];
implementors["cranelift_codegen_meta"] = [{"text":"impl Freeze for Def","synthetic":true,"types":[]},{"text":"impl Freeze for DefPool","synthetic":true,"types":[]},{"text":"impl Freeze for DefIndex","synthetic":true,"types":[]},{"text":"impl Freeze for Block","synthetic":true,"types":[]},{"text":"impl Freeze for BlockPool","synthetic":true,"types":[]},{"text":"impl Freeze for Var","synthetic":true,"types":[]},{"text":"impl Freeze for VarIndex","synthetic":true,"types":[]},{"text":"impl Freeze for VarPool","synthetic":true,"types":[]},{"text":"impl Freeze for ConstPool","synthetic":true,"types":[]},{"text":"impl Freeze for Apply","synthetic":true,"types":[]},{"text":"impl Freeze for DummyVar","synthetic":true,"types":[]},{"text":"impl Freeze for DummyConstant","synthetic":true,"types":[]},{"text":"impl Freeze for DummyDef","synthetic":true,"types":[]},{"text":"impl Freeze for ExprBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Expr","synthetic":true,"types":[]},{"text":"impl Freeze for Literal","synthetic":true,"types":[]},{"text":"impl Freeze for PatternPosition","synthetic":true,"types":[]},{"text":"impl Freeze for DummyExpr","synthetic":true,"types":[]},{"text":"impl Freeze for CpuMode","synthetic":true,"types":[]},{"text":"impl Freeze for EncodingContent","synthetic":true,"types":[]},{"text":"impl Freeze for EncodingBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for FormatField","synthetic":true,"types":[]},{"text":"impl Freeze for InstructionFormat","synthetic":true,"types":[]},{"text":"impl Freeze for FormatStructure","synthetic":true,"types":[]},{"text":"impl Freeze for InstructionFormatBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for OpcodeNumber","synthetic":true,"types":[]},{"text":"impl&lt;'all_inst&gt; Freeze for InstructionGroupBuilder&lt;'all_inst&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for InstructionGroup","synthetic":true,"types":[]},{"text":"impl Freeze for PolymorphicInfo","synthetic":true,"types":[]},{"text":"impl Freeze for InstructionContent","synthetic":true,"types":[]},{"text":"impl Freeze for InstructionBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for BoundInstruction","synthetic":true,"types":[]},{"text":"impl Freeze for FormatPredicateNode","synthetic":true,"types":[]},{"text":"impl Freeze for InstructionPredicate","synthetic":true,"types":[]},{"text":"impl Freeze for InstructionPredicateNumber","synthetic":true,"types":[]},{"text":"impl Freeze for InstructionPredicateRegistry","synthetic":true,"types":[]},{"text":"impl Freeze for ValueTypeOrAny","synthetic":true,"types":[]},{"text":"impl Freeze for BindParameter","synthetic":true,"types":[]},{"text":"impl Freeze for Immediate","synthetic":true,"types":[]},{"text":"impl Freeze for FormatPredicateKind","synthetic":true,"types":[]},{"text":"impl Freeze for TypePredicateNode","synthetic":true,"types":[]},{"text":"impl Freeze for InstructionPredicateNode","synthetic":true,"types":[]},{"text":"impl Freeze for InstSpec","synthetic":true,"types":[]},{"text":"impl Freeze for TargetIsa","synthetic":true,"types":[]},{"text":"impl Freeze for Operand","synthetic":true,"types":[]},{"text":"impl Freeze for OperandKind","synthetic":true,"types":[]},{"text":"impl Freeze for OperandKindFields","synthetic":true,"types":[]},{"text":"impl Freeze for Register","synthetic":true,"types":[]},{"text":"impl Freeze for Stack","synthetic":true,"types":[]},{"text":"impl Freeze for BranchRange","synthetic":true,"types":[]},{"text":"impl Freeze for EncodingRecipe","synthetic":true,"types":[]},{"text":"impl Freeze for EncodingRecipeNumber","synthetic":true,"types":[]},{"text":"impl Freeze for EncodingRecipeBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for OperandConstraint","synthetic":true,"types":[]},{"text":"impl Freeze for RegBankIndex","synthetic":true,"types":[]},{"text":"impl Freeze for RegBank","synthetic":true,"types":[]},{"text":"impl Freeze for RegClassIndex","synthetic":true,"types":[]},{"text":"impl Freeze for RegClass","synthetic":true,"types":[]},{"text":"impl Freeze for RegClassBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for RegBankBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for IsaRegsBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for IsaRegs","synthetic":true,"types":[]},{"text":"impl Freeze for RegClassProto","synthetic":true,"types":[]},{"text":"impl Freeze for BoolSettingIndex","synthetic":true,"types":[]},{"text":"impl Freeze for BoolSetting","synthetic":true,"types":[]},{"text":"impl Freeze for Setting","synthetic":true,"types":[]},{"text":"impl Freeze for PresetIndex","synthetic":true,"types":[]},{"text":"impl Freeze for Preset","synthetic":true,"types":[]},{"text":"impl Freeze for SettingGroup","synthetic":true,"types":[]},{"text":"impl Freeze for ProtoSetting","synthetic":true,"types":[]},{"text":"impl Freeze for ProtoPredicate","synthetic":true,"types":[]},{"text":"impl Freeze for Predicate","synthetic":true,"types":[]},{"text":"impl Freeze for SettingGroupBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for SpecificSetting","synthetic":true,"types":[]},{"text":"impl Freeze for PresetType","synthetic":true,"types":[]},{"text":"impl Freeze for ProtoSpecificSetting","synthetic":true,"types":[]},{"text":"impl Freeze for PredicateNode","synthetic":true,"types":[]},{"text":"impl Freeze for TypeEnvironment","synthetic":true,"types":[]},{"text":"impl Freeze for Constraint","synthetic":true,"types":[]},{"text":"impl Freeze for TypeEnvRank","synthetic":true,"types":[]},{"text":"impl Freeze for LaneTypeIterator","synthetic":true,"types":[]},{"text":"impl Freeze for VectorType","synthetic":true,"types":[]},{"text":"impl Freeze for SpecialTypeIterator","synthetic":true,"types":[]},{"text":"impl Freeze for ReferenceType","synthetic":true,"types":[]},{"text":"impl Freeze for ReferenceTypeIterator","synthetic":true,"types":[]},{"text":"impl Freeze for ValueType","synthetic":true,"types":[]},{"text":"impl Freeze for LaneType","synthetic":true,"types":[]},{"text":"impl Freeze for SpecialType","synthetic":true,"types":[]},{"text":"impl Freeze for TypeVarContent","synthetic":true,"types":[]},{"text":"impl Freeze for TypeVar","synthetic":true,"types":[]},{"text":"impl Freeze for TypeVarParent","synthetic":true,"types":[]},{"text":"impl Freeze for TypeSet","synthetic":true,"types":[]},{"text":"impl Freeze for TypeSetBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for DerivedFunc","synthetic":true,"types":[]},{"text":"impl Freeze for Interval","synthetic":true,"types":[]},{"text":"impl Freeze for Transform","synthetic":true,"types":[]},{"text":"impl Freeze for TransformGroup","synthetic":true,"types":[]},{"text":"impl Freeze for TransformGroupIndex","synthetic":true,"types":[]},{"text":"impl Freeze for TransformGroupBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for TransformGroups","synthetic":true,"types":[]},{"text":"impl Freeze for Formatter","synthetic":true,"types":[]},{"text":"impl Freeze for Match","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for ErrorInner","synthetic":true,"types":[]},{"text":"impl Freeze for Isa","synthetic":true,"types":[]},{"text":"impl&lt;'defs&gt; Freeze for PerCpuModeEncodings&lt;'defs&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for RecipeGroup","synthetic":true,"types":[]},{"text":"impl Freeze for PerCpuModeEncodings","synthetic":true,"types":[]},{"text":"impl&lt;'builder&gt; Freeze for RecipeGroup&lt;'builder&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'builder&gt; Freeze for Template&lt;'builder&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for RecipePrefixKind","synthetic":true,"types":[]},{"text":"impl&lt;'cpu_mode&gt; Freeze for Level1Table&lt;'cpu_mode&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Level2HashTableEntry","synthetic":true,"types":[]},{"text":"impl Freeze for Level2Table","synthetic":true,"types":[]},{"text":"impl Freeze for Encoder","synthetic":true,"types":[]},{"text":"impl Freeze for EncodingList","synthetic":true,"types":[]},{"text":"impl Freeze for ParentGroup","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SettingOrPreset&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Definitions","synthetic":true,"types":[]},{"text":"impl Freeze for EntityRefs","synthetic":true,"types":[]},{"text":"impl Freeze for Formats","synthetic":true,"types":[]},{"text":"impl Freeze for Immediates","synthetic":true,"types":[]},{"text":"impl Freeze for BoolIterator","synthetic":true,"types":[]},{"text":"impl Freeze for IntIterator","synthetic":true,"types":[]},{"text":"impl Freeze for FloatIterator","synthetic":true,"types":[]},{"text":"impl Freeze for FlagIterator","synthetic":true,"types":[]},{"text":"impl Freeze for ReferenceIterator","synthetic":true,"types":[]},{"text":"impl Freeze for Bool","synthetic":true,"types":[]},{"text":"impl Freeze for Int","synthetic":true,"types":[]},{"text":"impl Freeze for Float","synthetic":true,"types":[]},{"text":"impl Freeze for Flag","synthetic":true,"types":[]},{"text":"impl Freeze for Reference","synthetic":true,"types":[]},{"text":"impl&lt;'entries, T&gt; Freeze for UniqueTable&lt;'entries, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for UniqueSeqTable&lt;T&gt;","synthetic":true,"types":[]}];
implementors["cranelift_codegen_shared"] = [{"text":"impl Freeze for IntCC","synthetic":true,"types":[]},{"text":"impl Freeze for FloatCC","synthetic":true,"types":[]},{"text":"impl Freeze for EncodingBits","synthetic":true,"types":[]},{"text":"impl Freeze for OpcodePrefix","synthetic":true,"types":[]}];
implementors["cranelift_entity"] = [{"text":"impl&lt;K, V&gt; Freeze for BoxedSlice&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Freeze for Keys&lt;K&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for EntityList&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ListPool&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for SecondaryMap&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for PrimaryMap&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Freeze for EntitySet&lt;K&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for SparseMap&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for PackedOption&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["cranelift_filetests"] = [{"text":"impl Freeze for SingleFunctionCompiler","synthetic":true,"types":[]}];
implementors["cranelift_frontend"] = [{"text":"impl&lt;'a&gt; Freeze for FunctionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionBuilderContext","synthetic":true,"types":[]},{"text":"impl Freeze for Switch","synthetic":true,"types":[]},{"text":"impl Freeze for Variable","synthetic":true,"types":[]}];
implementors["cranelift_interpreter"] = [{"text":"impl Freeze for Environment","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Frame&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Interpreter","synthetic":true,"types":[]},{"text":"impl Freeze for ControlFlow","synthetic":true,"types":[]},{"text":"impl Freeze for Trap","synthetic":true,"types":[]}];
implementors["cranelift_module"] = [{"text":"impl Freeze for DataContext","synthetic":true,"types":[]},{"text":"impl Freeze for DataDescription","synthetic":true,"types":[]},{"text":"impl Freeze for DataId","synthetic":true,"types":[]},{"text":"impl Freeze for FuncId","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Freeze for Module&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Freeze for ModuleFunction&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CompiledFunction: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Freeze for ModuleNamespace&lt;'a, B&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for TrapSite","synthetic":true,"types":[]},{"text":"impl Freeze for Init","synthetic":true,"types":[]},{"text":"impl Freeze for FuncOrDataId","synthetic":true,"types":[]},{"text":"impl Freeze for Linkage","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleError","synthetic":true,"types":[]}];
implementors["cranelift_object"] = [{"text":"impl Freeze for ObjectBackend","synthetic":true,"types":[]},{"text":"impl Freeze for ObjectBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for ObjectProduct","synthetic":true,"types":[]}];
implementors["cranelift_reader"] = [{"text":"impl Freeze for Location","synthetic":true,"types":[]},{"text":"impl Freeze for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ParseOptions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Invocation","synthetic":true,"types":[]},{"text":"impl Freeze for SourceMap","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for TestCommand&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Comment&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Details&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for TestFile&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for IsaSpec","synthetic":true,"types":[]},{"text":"impl Freeze for ParseOptionError","synthetic":true,"types":[]},{"text":"impl Freeze for Comparison","synthetic":true,"types":[]},{"text":"impl Freeze for DataValue","synthetic":true,"types":[]},{"text":"impl Freeze for DataValueCastFailure","synthetic":true,"types":[]},{"text":"impl Freeze for RunCommand","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for TestOption&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Feature&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["cranelift_simplejit"] = [{"text":"impl Freeze for SimpleJITBackend","synthetic":true,"types":[]},{"text":"impl Freeze for SimpleJITBuilder","synthetic":true,"types":[]}];
implementors["cranelift_wasm"] = [{"text":"impl Freeze for DummyEnvironment","synthetic":true,"types":[]},{"text":"impl Freeze for WasmFuncType","synthetic":true,"types":[]},{"text":"impl Freeze for FuncTranslator","synthetic":true,"types":[]},{"text":"impl Freeze for FuncTranslationState","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleTranslationState","synthetic":true,"types":[]},{"text":"impl Freeze for DataIndex","synthetic":true,"types":[]},{"text":"impl Freeze for DefinedFuncIndex","synthetic":true,"types":[]},{"text":"impl Freeze for DefinedGlobalIndex","synthetic":true,"types":[]},{"text":"impl Freeze for DefinedMemoryIndex","synthetic":true,"types":[]},{"text":"impl Freeze for DefinedTableIndex","synthetic":true,"types":[]},{"text":"impl Freeze for ElemIndex","synthetic":true,"types":[]},{"text":"impl Freeze for FuncIndex","synthetic":true,"types":[]},{"text":"impl Freeze for Global","synthetic":true,"types":[]},{"text":"impl Freeze for GlobalIndex","synthetic":true,"types":[]},{"text":"impl Freeze for Memory","synthetic":true,"types":[]},{"text":"impl Freeze for MemoryIndex","synthetic":true,"types":[]},{"text":"impl Freeze for SignatureIndex","synthetic":true,"types":[]},{"text":"impl Freeze for Table","synthetic":true,"types":[]},{"text":"impl Freeze for TableIndex","synthetic":true,"types":[]},{"text":"impl Freeze for GlobalVariable","synthetic":true,"types":[]},{"text":"impl Freeze for ReturnMode","synthetic":true,"types":[]},{"text":"impl Freeze for WasmError","synthetic":true,"types":[]},{"text":"impl Freeze for WasmType","synthetic":true,"types":[]},{"text":"impl Freeze for GlobalInit","synthetic":true,"types":[]},{"text":"impl Freeze for TableElementType","synthetic":true,"types":[]}];
implementors["lightbeam"] = [{"text":"impl&lt;'module, M&gt; Freeze for CodeGenSession&lt;'module, M&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for NullOffsetSink","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Sinks&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ExecutableModule","synthetic":true,"types":[]},{"text":"impl Freeze for TranslatedModule","synthetic":true,"types":[]},{"text":"impl Freeze for ExecutionError","synthetic":true,"types":[]},{"text":"impl Freeze for Ieee32","synthetic":true,"types":[]},{"text":"impl Freeze for Ieee64","synthetic":true,"types":[]},{"text":"impl Freeze for SignfulInt","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Freeze for BrTable&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Freeze for BrTargetDrop&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for MemoryImmediate","synthetic":true,"types":[]},{"text":"impl&lt;'a, M&gt; Freeze for MicrowasmConv&lt;'a, M&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for OpSig","synthetic":true,"types":[]},{"text":"impl Freeze for Value","synthetic":true,"types":[]},{"text":"impl Freeze for Signedness","synthetic":true,"types":[]},{"text":"impl Freeze for Size","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for Type&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for NameTag","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Freeze for BrTarget&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Label&gt; Freeze for Operator&lt;Label&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Label: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["peepmatic"] = [{"text":"impl&lt;'a, TOperator&gt; Freeze for Optimizations&lt;'a, TOperator&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; !Freeze for Optimization&lt;'a, TOperator&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; !Freeze for Lhs&lt;'a, TOperator&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; !Freeze for Integer&lt;'a, TOperator&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; !Freeze for Boolean&lt;'a, TOperator&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; Freeze for ConditionCode&lt;'a, TOperator&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; Freeze for Constant&lt;'a, TOperator&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; Freeze for Variable&lt;'a, TOperator&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator, TOperand&gt; !Freeze for Operation&lt;'a, TOperator, TOperand&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; Freeze for Precondition&lt;'a, TOperator&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; Freeze for Unquote&lt;'a, TOperator&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; Freeze for Dfs&lt;'a, TOperator&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for VerifyError","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; Freeze for DynAstRef&lt;'a, TOperator&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; !Freeze for Pattern&lt;'a, TOperator&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; !Freeze for ValueLiteral&lt;'a, TOperator&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Constraint","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; !Freeze for ConstraintOperand&lt;'a, TOperator&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; !Freeze for Rhs&lt;'a, TOperator&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for TraversalEvent","synthetic":true,"types":[]}];
implementors["peepmatic_automata"] = [{"text":"impl&lt;TAlphabet, TState, TOutput&gt; Freeze for Builder&lt;TAlphabet, TState, TOutput&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for State","synthetic":true,"types":[]},{"text":"impl&lt;'a, TAlphabet, TState, TOutput&gt; Freeze for InsertionBuilder&lt;'a, TAlphabet, TState, TOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TOutput: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TAlphabet, TState, TOutput&gt; Freeze for Automaton&lt;TAlphabet, TState, TOutput&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TAlphabet, TState, TOutput&gt; Freeze for Query&lt;'a, TAlphabet, TState, TOutput&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for DebugDotFmt","synthetic":true,"types":[]},{"text":"impl Freeze for DisplayDotFmt","synthetic":true,"types":[]}];
implementors["peepmatic_runtime"] = [{"text":"impl Freeze for ConditionCode","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for IntegerId","synthetic":true,"types":[]},{"text":"impl Freeze for IntegerInterner","synthetic":true,"types":[]},{"text":"impl&lt;TOperator&gt; !Freeze for Optimizations&lt;TOperator&gt;","synthetic":true,"types":[]},{"text":"impl&lt;TOperator&gt; Freeze for Optimization&lt;TOperator&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Else","synthetic":true,"types":[]},{"text":"impl&lt;TOperator&gt; Freeze for Increment&lt;TOperator&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for LhsId","synthetic":true,"types":[]},{"text":"impl Freeze for RhsId","synthetic":true,"types":[]},{"text":"impl Freeze for MatchOp","synthetic":true,"types":[]},{"text":"impl&lt;TOperator&gt; Freeze for Action&lt;TOperator&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TOperator: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TOperator&gt; !Freeze for PeepholeOptimizations&lt;TOperator&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'peep, 'ctx, TInstructionSet&gt; Freeze for PeepholeOptimizer&lt;'peep, 'ctx, TInstructionSet&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TInstructionSet: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Constant","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for Part&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Path&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for PathId","synthetic":true,"types":[]},{"text":"impl !Freeze for PathInterner","synthetic":true,"types":[]},{"text":"impl Freeze for Type","synthetic":true,"types":[]},{"text":"impl Freeze for BitWidth","synthetic":true,"types":[]},{"text":"impl Freeze for Kind","synthetic":true,"types":[]},{"text":"impl Freeze for UnquoteOperator","synthetic":true,"types":[]}];
implementors["peepmatic_test"] = [{"text":"impl Freeze for Instruction","synthetic":true,"types":[]},{"text":"impl Freeze for InstructionData","synthetic":true,"types":[]},{"text":"impl !Freeze for Program","synthetic":true,"types":[]},{"text":"impl Freeze for TestIsa","synthetic":true,"types":[]},{"text":"impl Freeze for Immediate","synthetic":true,"types":[]}];
implementors["peepmatic_test_operator"] = [{"text":"impl Freeze for TestOperator","synthetic":true,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Freeze for TokenStream","synthetic":true,"types":[]},{"text":"impl Freeze for LexError","synthetic":true,"types":[]},{"text":"impl Freeze for Span","synthetic":true,"types":[]},{"text":"impl Freeze for Group","synthetic":true,"types":[]},{"text":"impl Freeze for Punct","synthetic":true,"types":[]},{"text":"impl Freeze for Ident","synthetic":true,"types":[]},{"text":"impl Freeze for Literal","synthetic":true,"types":[]},{"text":"impl Freeze for TokenTree","synthetic":true,"types":[]},{"text":"impl Freeze for Delimiter","synthetic":true,"types":[]},{"text":"impl Freeze for Spacing","synthetic":true,"types":[]},{"text":"impl Freeze for IntoIter","synthetic":true,"types":[]}];
implementors["serde"] = [{"text":"impl Freeze for IgnoredAny","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Unexpected&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for UnitDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for BoolDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for I8Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for I16Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for I32Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for I64Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for IsizeDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for U8Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for U16Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for U64Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for UsizeDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for F32Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for F64Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for CharDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for I128Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for U128Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for U32Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Freeze for StrDeserializer&lt;'a, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Freeze for BorrowedStrDeserializer&lt;'de, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for StringDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Freeze for CowStrDeserializer&lt;'a, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Freeze for BorrowedBytesDeserializer&lt;'de, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; Freeze for SeqDeserializer&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for SeqAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, I, E&gt; Freeze for MapDeserializer&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as Iterator&gt;::Item as Pair&gt;::Second: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for MapAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ok, Error&gt; Freeze for Impossible&lt;Ok, Error&gt;","synthetic":true,"types":[]}];
implementors["syn"] = [{"text":"impl Freeze for Attribute","synthetic":true,"types":[]},{"text":"impl Freeze for MetaList","synthetic":true,"types":[]},{"text":"impl Freeze for MetaNameValue","synthetic":true,"types":[]},{"text":"impl Freeze for Field","synthetic":true,"types":[]},{"text":"impl Freeze for FieldsNamed","synthetic":true,"types":[]},{"text":"impl Freeze for FieldsUnnamed","synthetic":true,"types":[]},{"text":"impl Freeze for Variant","synthetic":true,"types":[]},{"text":"impl Freeze for VisCrate","synthetic":true,"types":[]},{"text":"impl Freeze for VisPublic","synthetic":true,"types":[]},{"text":"impl Freeze for VisRestricted","synthetic":true,"types":[]},{"text":"impl Freeze for Arm","synthetic":true,"types":[]},{"text":"impl Freeze for FieldValue","synthetic":true,"types":[]},{"text":"impl Freeze for Label","synthetic":true,"types":[]},{"text":"impl Freeze for MethodTurbofish","synthetic":true,"types":[]},{"text":"impl Freeze for ExprArray","synthetic":true,"types":[]},{"text":"impl Freeze for ExprAssign","synthetic":true,"types":[]},{"text":"impl Freeze for ExprAssignOp","synthetic":true,"types":[]},{"text":"impl Freeze for ExprAsync","synthetic":true,"types":[]},{"text":"impl Freeze for ExprAwait","synthetic":true,"types":[]},{"text":"impl Freeze for ExprBinary","synthetic":true,"types":[]},{"text":"impl Freeze for ExprBlock","synthetic":true,"types":[]},{"text":"impl Freeze for ExprBox","synthetic":true,"types":[]},{"text":"impl Freeze for ExprBreak","synthetic":true,"types":[]},{"text":"impl Freeze for ExprCall","synthetic":true,"types":[]},{"text":"impl Freeze for ExprCast","synthetic":true,"types":[]},{"text":"impl Freeze for ExprClosure","synthetic":true,"types":[]},{"text":"impl Freeze for ExprContinue","synthetic":true,"types":[]},{"text":"impl Freeze for ExprField","synthetic":true,"types":[]},{"text":"impl Freeze for ExprForLoop","synthetic":true,"types":[]},{"text":"impl Freeze for ExprGroup","synthetic":true,"types":[]},{"text":"impl Freeze for ExprIf","synthetic":true,"types":[]},{"text":"impl Freeze for ExprIndex","synthetic":true,"types":[]},{"text":"impl Freeze for ExprLet","synthetic":true,"types":[]},{"text":"impl Freeze for ExprLit","synthetic":true,"types":[]},{"text":"impl Freeze for ExprLoop","synthetic":true,"types":[]},{"text":"impl Freeze for ExprMacro","synthetic":true,"types":[]},{"text":"impl Freeze for ExprMatch","synthetic":true,"types":[]},{"text":"impl Freeze for ExprMethodCall","synthetic":true,"types":[]},{"text":"impl Freeze for ExprParen","synthetic":true,"types":[]},{"text":"impl Freeze for ExprPath","synthetic":true,"types":[]},{"text":"impl Freeze for ExprRange","synthetic":true,"types":[]},{"text":"impl Freeze for ExprReference","synthetic":true,"types":[]},{"text":"impl Freeze for ExprRepeat","synthetic":true,"types":[]},{"text":"impl Freeze for ExprReturn","synthetic":true,"types":[]},{"text":"impl Freeze for ExprStruct","synthetic":true,"types":[]},{"text":"impl Freeze for ExprTry","synthetic":true,"types":[]},{"text":"impl Freeze for ExprTryBlock","synthetic":true,"types":[]},{"text":"impl Freeze for ExprTuple","synthetic":true,"types":[]},{"text":"impl Freeze for ExprType","synthetic":true,"types":[]},{"text":"impl Freeze for ExprUnary","synthetic":true,"types":[]},{"text":"impl Freeze for ExprUnsafe","synthetic":true,"types":[]},{"text":"impl Freeze for ExprWhile","synthetic":true,"types":[]},{"text":"impl Freeze for ExprYield","synthetic":true,"types":[]},{"text":"impl Freeze for Index","synthetic":true,"types":[]},{"text":"impl Freeze for BoundLifetimes","synthetic":true,"types":[]},{"text":"impl Freeze for ConstParam","synthetic":true,"types":[]},{"text":"impl Freeze for Generics","synthetic":true,"types":[]},{"text":"impl Freeze for LifetimeDef","synthetic":true,"types":[]},{"text":"impl Freeze for PredicateEq","synthetic":true,"types":[]},{"text":"impl Freeze for PredicateLifetime","synthetic":true,"types":[]},{"text":"impl Freeze for PredicateType","synthetic":true,"types":[]},{"text":"impl Freeze for TraitBound","synthetic":true,"types":[]},{"text":"impl Freeze for TypeParam","synthetic":true,"types":[]},{"text":"impl Freeze for WhereClause","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ImplGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Turbofish&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for TypeGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ForeignItemFn","synthetic":true,"types":[]},{"text":"impl Freeze for ForeignItemMacro","synthetic":true,"types":[]},{"text":"impl Freeze for ForeignItemStatic","synthetic":true,"types":[]},{"text":"impl Freeze for ForeignItemType","synthetic":true,"types":[]},{"text":"impl Freeze for ImplItemConst","synthetic":true,"types":[]},{"text":"impl Freeze for ImplItemMacro","synthetic":true,"types":[]},{"text":"impl Freeze for ImplItemMethod","synthetic":true,"types":[]},{"text":"impl Freeze for ImplItemType","synthetic":true,"types":[]},{"text":"impl Freeze for ItemConst","synthetic":true,"types":[]},{"text":"impl Freeze for ItemEnum","synthetic":true,"types":[]},{"text":"impl Freeze for ItemExternCrate","synthetic":true,"types":[]},{"text":"impl Freeze for ItemFn","synthetic":true,"types":[]},{"text":"impl Freeze for ItemForeignMod","synthetic":true,"types":[]},{"text":"impl Freeze for ItemImpl","synthetic":true,"types":[]},{"text":"impl Freeze for ItemMacro","synthetic":true,"types":[]},{"text":"impl Freeze for ItemMacro2","synthetic":true,"types":[]},{"text":"impl Freeze for ItemMod","synthetic":true,"types":[]},{"text":"impl Freeze for ItemStatic","synthetic":true,"types":[]},{"text":"impl Freeze for ItemStruct","synthetic":true,"types":[]},{"text":"impl Freeze for ItemTrait","synthetic":true,"types":[]},{"text":"impl Freeze for ItemTraitAlias","synthetic":true,"types":[]},{"text":"impl Freeze for ItemType","synthetic":true,"types":[]},{"text":"impl Freeze for ItemUnion","synthetic":true,"types":[]},{"text":"impl Freeze for ItemUse","synthetic":true,"types":[]},{"text":"impl Freeze for Receiver","synthetic":true,"types":[]},{"text":"impl Freeze for Signature","synthetic":true,"types":[]},{"text":"impl Freeze for TraitItemConst","synthetic":true,"types":[]},{"text":"impl Freeze for TraitItemMacro","synthetic":true,"types":[]},{"text":"impl Freeze for TraitItemMethod","synthetic":true,"types":[]},{"text":"impl Freeze for TraitItemType","synthetic":true,"types":[]},{"text":"impl Freeze for UseGlob","synthetic":true,"types":[]},{"text":"impl Freeze for UseGroup","synthetic":true,"types":[]},{"text":"impl Freeze for UseName","synthetic":true,"types":[]},{"text":"impl Freeze for UsePath","synthetic":true,"types":[]},{"text":"impl Freeze for UseRename","synthetic":true,"types":[]},{"text":"impl Freeze for File","synthetic":true,"types":[]},{"text":"impl Freeze for Lifetime","synthetic":true,"types":[]},{"text":"impl Freeze for LitBool","synthetic":true,"types":[]},{"text":"impl Freeze for LitByte","synthetic":true,"types":[]},{"text":"impl Freeze for LitByteStr","synthetic":true,"types":[]},{"text":"impl Freeze for LitChar","synthetic":true,"types":[]},{"text":"impl Freeze for LitFloat","synthetic":true,"types":[]},{"text":"impl Freeze for LitInt","synthetic":true,"types":[]},{"text":"impl Freeze for LitStr","synthetic":true,"types":[]},{"text":"impl Freeze for Macro","synthetic":true,"types":[]},{"text":"impl Freeze for DataEnum","synthetic":true,"types":[]},{"text":"impl Freeze for DataStruct","synthetic":true,"types":[]},{"text":"impl Freeze for DataUnion","synthetic":true,"types":[]},{"text":"impl Freeze for DeriveInput","synthetic":true,"types":[]},{"text":"impl Freeze for Block","synthetic":true,"types":[]},{"text":"impl Freeze for Local","synthetic":true,"types":[]},{"text":"impl Freeze for Abi","synthetic":true,"types":[]},{"text":"impl Freeze for BareFnArg","synthetic":true,"types":[]},{"text":"impl Freeze for TypeArray","synthetic":true,"types":[]},{"text":"impl Freeze for TypeBareFn","synthetic":true,"types":[]},{"text":"impl Freeze for TypeGroup","synthetic":true,"types":[]},{"text":"impl Freeze for TypeImplTrait","synthetic":true,"types":[]},{"text":"impl Freeze for TypeInfer","synthetic":true,"types":[]},{"text":"impl Freeze for TypeMacro","synthetic":true,"types":[]},{"text":"impl Freeze for TypeNever","synthetic":true,"types":[]},{"text":"impl Freeze for TypeParen","synthetic":true,"types":[]},{"text":"impl Freeze for TypePath","synthetic":true,"types":[]},{"text":"impl Freeze for TypePtr","synthetic":true,"types":[]},{"text":"impl Freeze for TypeReference","synthetic":true,"types":[]},{"text":"impl Freeze for TypeSlice","synthetic":true,"types":[]},{"text":"impl Freeze for TypeTraitObject","synthetic":true,"types":[]},{"text":"impl Freeze for TypeTuple","synthetic":true,"types":[]},{"text":"impl Freeze for Variadic","synthetic":true,"types":[]},{"text":"impl Freeze for FieldPat","synthetic":true,"types":[]},{"text":"impl Freeze for PatBox","synthetic":true,"types":[]},{"text":"impl Freeze for PatIdent","synthetic":true,"types":[]},{"text":"impl Freeze for PatLit","synthetic":true,"types":[]},{"text":"impl Freeze for PatMacro","synthetic":true,"types":[]},{"text":"impl Freeze for PatOr","synthetic":true,"types":[]},{"text":"impl Freeze for PatPath","synthetic":true,"types":[]},{"text":"impl Freeze for PatRange","synthetic":true,"types":[]},{"text":"impl Freeze for PatReference","synthetic":true,"types":[]},{"text":"impl Freeze for PatRest","synthetic":true,"types":[]},{"text":"impl Freeze for PatSlice","synthetic":true,"types":[]},{"text":"impl Freeze for PatStruct","synthetic":true,"types":[]},{"text":"impl Freeze for PatTuple","synthetic":true,"types":[]},{"text":"impl Freeze for PatTupleStruct","synthetic":true,"types":[]},{"text":"impl Freeze for PatType","synthetic":true,"types":[]},{"text":"impl Freeze for PatWild","synthetic":true,"types":[]},{"text":"impl Freeze for AngleBracketedGenericArguments","synthetic":true,"types":[]},{"text":"impl Freeze for Binding","synthetic":true,"types":[]},{"text":"impl Freeze for Constraint","synthetic":true,"types":[]},{"text":"impl Freeze for ParenthesizedGenericArguments","synthetic":true,"types":[]},{"text":"impl Freeze for Path","synthetic":true,"types":[]},{"text":"impl Freeze for PathSegment","synthetic":true,"types":[]},{"text":"impl Freeze for QSelf","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for AttrStyle","synthetic":true,"types":[]},{"text":"impl Freeze for Meta","synthetic":true,"types":[]},{"text":"impl Freeze for NestedMeta","synthetic":true,"types":[]},{"text":"impl Freeze for Fields","synthetic":true,"types":[]},{"text":"impl Freeze for Visibility","synthetic":true,"types":[]},{"text":"impl Freeze for GenericMethodArgument","synthetic":true,"types":[]},{"text":"impl Freeze for RangeLimits","synthetic":true,"types":[]},{"text":"impl Freeze for Expr","synthetic":true,"types":[]},{"text":"impl Freeze for Member","synthetic":true,"types":[]},{"text":"impl Freeze for GenericParam","synthetic":true,"types":[]},{"text":"impl Freeze for TraitBoundModifier","synthetic":true,"types":[]},{"text":"impl Freeze for TypeParamBound","synthetic":true,"types":[]},{"text":"impl Freeze for WherePredicate","synthetic":true,"types":[]},{"text":"impl Freeze for FnArg","synthetic":true,"types":[]},{"text":"impl Freeze for ForeignItem","synthetic":true,"types":[]},{"text":"impl Freeze for ImplItem","synthetic":true,"types":[]},{"text":"impl Freeze for Item","synthetic":true,"types":[]},{"text":"impl Freeze for TraitItem","synthetic":true,"types":[]},{"text":"impl Freeze for UseTree","synthetic":true,"types":[]},{"text":"impl Freeze for Lit","synthetic":true,"types":[]},{"text":"impl Freeze for StrStyle","synthetic":true,"types":[]},{"text":"impl Freeze for MacroDelimiter","synthetic":true,"types":[]},{"text":"impl Freeze for Data","synthetic":true,"types":[]},{"text":"impl Freeze for BinOp","synthetic":true,"types":[]},{"text":"impl Freeze for UnOp","synthetic":true,"types":[]},{"text":"impl Freeze for Stmt","synthetic":true,"types":[]},{"text":"impl Freeze for ReturnType","synthetic":true,"types":[]},{"text":"impl Freeze for Type","synthetic":true,"types":[]},{"text":"impl Freeze for Pat","synthetic":true,"types":[]},{"text":"impl Freeze for GenericArgument","synthetic":true,"types":[]},{"text":"impl Freeze for PathArguments","synthetic":true,"types":[]},{"text":"impl Freeze for Underscore","synthetic":true,"types":[]},{"text":"impl Freeze for Abstract","synthetic":true,"types":[]},{"text":"impl Freeze for As","synthetic":true,"types":[]},{"text":"impl Freeze for Async","synthetic":true,"types":[]},{"text":"impl Freeze for Auto","synthetic":true,"types":[]},{"text":"impl Freeze for Await","synthetic":true,"types":[]},{"text":"impl Freeze for Become","synthetic":true,"types":[]},{"text":"impl Freeze for Box","synthetic":true,"types":[]},{"text":"impl Freeze for Break","synthetic":true,"types":[]},{"text":"impl Freeze for Const","synthetic":true,"types":[]},{"text":"impl Freeze for Continue","synthetic":true,"types":[]},{"text":"impl Freeze for Crate","synthetic":true,"types":[]},{"text":"impl Freeze for Default","synthetic":true,"types":[]},{"text":"impl Freeze for Do","synthetic":true,"types":[]},{"text":"impl Freeze for Dyn","synthetic":true,"types":[]},{"text":"impl Freeze for Else","synthetic":true,"types":[]},{"text":"impl Freeze for Enum","synthetic":true,"types":[]},{"text":"impl Freeze for Extern","synthetic":true,"types":[]},{"text":"impl Freeze for Final","synthetic":true,"types":[]},{"text":"impl Freeze for Fn","synthetic":true,"types":[]},{"text":"impl Freeze for For","synthetic":true,"types":[]},{"text":"impl Freeze for If","synthetic":true,"types":[]},{"text":"impl Freeze for Impl","synthetic":true,"types":[]},{"text":"impl Freeze for In","synthetic":true,"types":[]},{"text":"impl Freeze for Let","synthetic":true,"types":[]},{"text":"impl Freeze for Loop","synthetic":true,"types":[]},{"text":"impl Freeze for Macro","synthetic":true,"types":[]},{"text":"impl Freeze for Match","synthetic":true,"types":[]},{"text":"impl Freeze for Mod","synthetic":true,"types":[]},{"text":"impl Freeze for Move","synthetic":true,"types":[]},{"text":"impl Freeze for Mut","synthetic":true,"types":[]},{"text":"impl Freeze for Override","synthetic":true,"types":[]},{"text":"impl Freeze for Priv","synthetic":true,"types":[]},{"text":"impl Freeze for Pub","synthetic":true,"types":[]},{"text":"impl Freeze for Ref","synthetic":true,"types":[]},{"text":"impl Freeze for Return","synthetic":true,"types":[]},{"text":"impl Freeze for SelfType","synthetic":true,"types":[]},{"text":"impl Freeze for SelfValue","synthetic":true,"types":[]},{"text":"impl Freeze for Static","synthetic":true,"types":[]},{"text":"impl Freeze for Struct","synthetic":true,"types":[]},{"text":"impl Freeze for Super","synthetic":true,"types":[]},{"text":"impl Freeze for Trait","synthetic":true,"types":[]},{"text":"impl Freeze for Try","synthetic":true,"types":[]},{"text":"impl Freeze for Type","synthetic":true,"types":[]},{"text":"impl Freeze for Typeof","synthetic":true,"types":[]},{"text":"impl Freeze for Union","synthetic":true,"types":[]},{"text":"impl Freeze for Unsafe","synthetic":true,"types":[]},{"text":"impl Freeze for Unsized","synthetic":true,"types":[]},{"text":"impl Freeze for Use","synthetic":true,"types":[]},{"text":"impl Freeze for Virtual","synthetic":true,"types":[]},{"text":"impl Freeze for Where","synthetic":true,"types":[]},{"text":"impl Freeze for While","synthetic":true,"types":[]},{"text":"impl Freeze for Yield","synthetic":true,"types":[]},{"text":"impl Freeze for Add","synthetic":true,"types":[]},{"text":"impl Freeze for AddEq","synthetic":true,"types":[]},{"text":"impl Freeze for And","synthetic":true,"types":[]},{"text":"impl Freeze for AndAnd","synthetic":true,"types":[]},{"text":"impl Freeze for AndEq","synthetic":true,"types":[]},{"text":"impl Freeze for At","synthetic":true,"types":[]},{"text":"impl Freeze for Bang","synthetic":true,"types":[]},{"text":"impl Freeze for Caret","synthetic":true,"types":[]},{"text":"impl Freeze for CaretEq","synthetic":true,"types":[]},{"text":"impl Freeze for Colon","synthetic":true,"types":[]},{"text":"impl Freeze for Colon2","synthetic":true,"types":[]},{"text":"impl Freeze for Comma","synthetic":true,"types":[]},{"text":"impl Freeze for Div","synthetic":true,"types":[]},{"text":"impl Freeze for DivEq","synthetic":true,"types":[]},{"text":"impl Freeze for Dollar","synthetic":true,"types":[]},{"text":"impl Freeze for Dot","synthetic":true,"types":[]},{"text":"impl Freeze for Dot2","synthetic":true,"types":[]},{"text":"impl Freeze for Dot3","synthetic":true,"types":[]},{"text":"impl Freeze for DotDotEq","synthetic":true,"types":[]},{"text":"impl Freeze for Eq","synthetic":true,"types":[]},{"text":"impl Freeze for EqEq","synthetic":true,"types":[]},{"text":"impl Freeze for Ge","synthetic":true,"types":[]},{"text":"impl Freeze for Gt","synthetic":true,"types":[]},{"text":"impl Freeze for Le","synthetic":true,"types":[]},{"text":"impl Freeze for Lt","synthetic":true,"types":[]},{"text":"impl Freeze for MulEq","synthetic":true,"types":[]},{"text":"impl Freeze for Ne","synthetic":true,"types":[]},{"text":"impl Freeze for Or","synthetic":true,"types":[]},{"text":"impl Freeze for OrEq","synthetic":true,"types":[]},{"text":"impl Freeze for OrOr","synthetic":true,"types":[]},{"text":"impl Freeze for Pound","synthetic":true,"types":[]},{"text":"impl Freeze for Question","synthetic":true,"types":[]},{"text":"impl Freeze for RArrow","synthetic":true,"types":[]},{"text":"impl Freeze for LArrow","synthetic":true,"types":[]},{"text":"impl Freeze for Rem","synthetic":true,"types":[]},{"text":"impl Freeze for RemEq","synthetic":true,"types":[]},{"text":"impl Freeze for FatArrow","synthetic":true,"types":[]},{"text":"impl Freeze for Semi","synthetic":true,"types":[]},{"text":"impl Freeze for Shl","synthetic":true,"types":[]},{"text":"impl Freeze for ShlEq","synthetic":true,"types":[]},{"text":"impl Freeze for Shr","synthetic":true,"types":[]},{"text":"impl Freeze for ShrEq","synthetic":true,"types":[]},{"text":"impl Freeze for Star","synthetic":true,"types":[]},{"text":"impl Freeze for Sub","synthetic":true,"types":[]},{"text":"impl Freeze for SubEq","synthetic":true,"types":[]},{"text":"impl Freeze for Tilde","synthetic":true,"types":[]},{"text":"impl Freeze for Brace","synthetic":true,"types":[]},{"text":"impl Freeze for Bracket","synthetic":true,"types":[]},{"text":"impl Freeze for Paren","synthetic":true,"types":[]},{"text":"impl Freeze for Group","synthetic":true,"types":[]},{"text":"impl Freeze for TokenBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Freeze for Punctuated&lt;T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Freeze for Pairs&lt;'a, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Freeze for PairsMut&lt;'a, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Freeze for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Freeze for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Freeze for Lookahead1&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Freeze for ParseBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'a&gt; Freeze for StepCursor&lt;'c, 'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Nothing","synthetic":true,"types":[]}];
implementors["wasi_common"] = [{"text":"impl !Freeze for WasiCtx","synthetic":true,"types":[]},{"text":"impl Freeze for WasiCtxBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for HandleRights","synthetic":true,"types":[]},{"text":"impl !Freeze for OsDir","synthetic":true,"types":[]},{"text":"impl !Freeze for OsFile","synthetic":true,"types":[]},{"text":"impl !Freeze for OsOther","synthetic":true,"types":[]},{"text":"impl Freeze for WasiCtxBuilderError","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;'ctx&gt; Freeze for Dir&lt;'ctx&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for DirBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for DirEntry","synthetic":true,"types":[]},{"text":"impl&lt;'ctx&gt; Freeze for File&lt;'ctx&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for FileType","synthetic":true,"types":[]},{"text":"impl Freeze for Metadata","synthetic":true,"types":[]},{"text":"impl Freeze for OpenOptions","synthetic":true,"types":[]},{"text":"impl Freeze for Permissions","synthetic":true,"types":[]},{"text":"impl Freeze for ReadDir","synthetic":true,"types":[]},{"text":"impl Freeze for WasiCtx","synthetic":true,"types":[]},{"text":"impl Freeze for WasiCtxBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_dirent_t","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_fdstat_t","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_filestat_t","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_event_fd_readwrite_t","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_event_t","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_subscription_clock_t","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_subscription_fd_readwrite_t","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_subscription_u_t","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_subscription_t","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_subscription_u_u_t","synthetic":true,"types":[]},{"text":"impl Freeze for WasiError","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_iovec_t","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_ciovec_t","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_prestat_dir_t","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_prestat_t","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_prestat_u_t","synthetic":true,"types":[]},{"text":"impl Freeze for VecFileContents","synthetic":true,"types":[]},{"text":"impl !Freeze for InMemoryFile","synthetic":true,"types":[]},{"text":"impl !Freeze for VirtualDir","synthetic":true,"types":[]},{"text":"impl Freeze for VirtualDirEntry","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; !Freeze for ReadPipe&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; !Freeze for WritePipe&lt;W&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Rights","synthetic":true,"types":[]},{"text":"impl Freeze for Fd","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Iovec&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Ciovec&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Dirent","synthetic":true,"types":[]},{"text":"impl Freeze for Fdflags","synthetic":true,"types":[]},{"text":"impl Freeze for Fdstat","synthetic":true,"types":[]},{"text":"impl Freeze for Fstflags","synthetic":true,"types":[]},{"text":"impl Freeze for Lookupflags","synthetic":true,"types":[]},{"text":"impl Freeze for Oflags","synthetic":true,"types":[]},{"text":"impl Freeze for Filestat","synthetic":true,"types":[]},{"text":"impl Freeze for Eventrwflags","synthetic":true,"types":[]},{"text":"impl Freeze for EventFdReadwrite","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for Subclockflags","synthetic":true,"types":[]},{"text":"impl Freeze for SubscriptionClock","synthetic":true,"types":[]},{"text":"impl Freeze for SubscriptionFdReadwrite","synthetic":true,"types":[]},{"text":"impl Freeze for Subscription","synthetic":true,"types":[]},{"text":"impl Freeze for Riflags","synthetic":true,"types":[]},{"text":"impl Freeze for Roflags","synthetic":true,"types":[]},{"text":"impl Freeze for Sdflags","synthetic":true,"types":[]},{"text":"impl Freeze for PrestatDir","synthetic":true,"types":[]},{"text":"impl Freeze for Clockid","synthetic":true,"types":[]},{"text":"impl Freeze for Errno","synthetic":true,"types":[]},{"text":"impl Freeze for Whence","synthetic":true,"types":[]},{"text":"impl Freeze for Filetype","synthetic":true,"types":[]},{"text":"impl Freeze for Advice","synthetic":true,"types":[]},{"text":"impl Freeze for Eventtype","synthetic":true,"types":[]},{"text":"impl Freeze for SubscriptionU","synthetic":true,"types":[]},{"text":"impl Freeze for Signal","synthetic":true,"types":[]},{"text":"impl Freeze for Preopentype","synthetic":true,"types":[]},{"text":"impl Freeze for Prestat","synthetic":true,"types":[]}];
implementors["wasmtime"] = [{"text":"impl Freeze for Global","synthetic":true,"types":[]},{"text":"impl Freeze for Table","synthetic":true,"types":[]},{"text":"impl Freeze for Memory","synthetic":true,"types":[]},{"text":"impl&lt;'instance&gt; Freeze for Export&lt;'instance&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for FrameInfo","synthetic":true,"types":[]},{"text":"impl Freeze for Func","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Caller&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Instance","synthetic":true,"types":[]},{"text":"impl Freeze for Linker","synthetic":true,"types":[]},{"text":"impl Freeze for Module","synthetic":true,"types":[]},{"text":"impl Freeze for ExternRef","synthetic":true,"types":[]},{"text":"impl Freeze for Config","synthetic":true,"types":[]},{"text":"impl Freeze for Engine","synthetic":true,"types":[]},{"text":"impl Freeze for Store","synthetic":true,"types":[]},{"text":"impl Freeze for InterruptHandle","synthetic":true,"types":[]},{"text":"impl Freeze for Trap","synthetic":true,"types":[]},{"text":"impl Freeze for Limits","synthetic":true,"types":[]},{"text":"impl Freeze for FuncType","synthetic":true,"types":[]},{"text":"impl Freeze for GlobalType","synthetic":true,"types":[]},{"text":"impl Freeze for TableType","synthetic":true,"types":[]},{"text":"impl Freeze for MemoryType","synthetic":true,"types":[]},{"text":"impl&lt;'module&gt; Freeze for ImportType&lt;'module&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'module&gt; Freeze for ExportType&lt;'module&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Extern","synthetic":true,"types":[]},{"text":"impl Freeze for Strategy","synthetic":true,"types":[]},{"text":"impl Freeze for OptLevel","synthetic":true,"types":[]},{"text":"impl Freeze for ProfilingStrategy","synthetic":true,"types":[]},{"text":"impl Freeze for Mutability","synthetic":true,"types":[]},{"text":"impl Freeze for ValType","synthetic":true,"types":[]},{"text":"impl Freeze for ExternType","synthetic":true,"types":[]},{"text":"impl Freeze for Val","synthetic":true,"types":[]}];
implementors["wasmtime_cache"] = [{"text":"impl Freeze for CacheConfig","synthetic":true,"types":[]},{"text":"impl&lt;'config&gt; Freeze for ModuleCacheEntry&lt;'config&gt;","synthetic":true,"types":[]}];
implementors["wasmtime_cranelift"] = [{"text":"impl !Freeze for Cranelift","synthetic":true,"types":[]}];
implementors["wasmtime_debug"] = [{"text":"impl Freeze for DwarfSection","synthetic":true,"types":[]},{"text":"impl Freeze for DwarfSectionRelocTarget","synthetic":true,"types":[]}];
implementors["wasmtime_environ"] = [{"text":"impl Freeze for InstructionAddressMap","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionAddressMap","synthetic":true,"types":[]},{"text":"impl Freeze for BuiltinFunctionIndex","synthetic":true,"types":[]},{"text":"impl Freeze for CompiledFunction","synthetic":true,"types":[]},{"text":"impl Freeze for Relocation","synthetic":true,"types":[]},{"text":"impl Freeze for TrapInformation","synthetic":true,"types":[]},{"text":"impl Freeze for StackMapInformation","synthetic":true,"types":[]},{"text":"impl Freeze for MemoryPlan","synthetic":true,"types":[]},{"text":"impl Freeze for Module","synthetic":true,"types":[]},{"text":"impl Freeze for TableElements","synthetic":true,"types":[]},{"text":"impl Freeze for TablePlan","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Freeze for ModuleEnvironment&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Freeze for ModuleTranslation&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for FunctionBodyData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for DebugInfoData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for NameSection&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for WasmFileInfo","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionMetadata","synthetic":true,"types":[]},{"text":"impl Freeze for DataInitializerLocation","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Freeze for DataInitializer&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Tunables","synthetic":true,"types":[]},{"text":"impl Freeze for TargetSharedSignatureIndex","synthetic":true,"types":[]},{"text":"impl Freeze for VMOffsets","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleMemoryOffset","synthetic":true,"types":[]},{"text":"impl Freeze for RelocationTarget","synthetic":true,"types":[]},{"text":"impl Freeze for CompileError","synthetic":true,"types":[]},{"text":"impl Freeze for EntityIndex","synthetic":true,"types":[]},{"text":"impl Freeze for MemoryStyle","synthetic":true,"types":[]},{"text":"impl Freeze for TableStyle","synthetic":true,"types":[]}];
implementors["wasmtime_fuzzing"] = [{"text":"impl Freeze for DifferentialConfig","synthetic":true,"types":[]},{"text":"impl Freeze for Config","synthetic":true,"types":[]},{"text":"impl Freeze for SpecTest","synthetic":true,"types":[]},{"text":"impl Freeze for TableOps","synthetic":true,"types":[]}];
implementors["wasmtime_jit"] = [{"text":"impl Freeze for CodeMemory","synthetic":true,"types":[]},{"text":"impl Freeze for Compilation","synthetic":true,"types":[]},{"text":"impl Freeze for Compiler","synthetic":true,"types":[]},{"text":"impl Freeze for CompilationArtifacts","synthetic":true,"types":[]},{"text":"impl Freeze for CompiledModule","synthetic":true,"types":[]},{"text":"impl Freeze for CompilationStrategy","synthetic":true,"types":[]},{"text":"impl Freeze for SetupError","synthetic":true,"types":[]},{"text":"impl Freeze for TrampolineRelocSink","synthetic":true,"types":[]}];
implementors["wasmtime_lightbeam"] = [{"text":"impl Freeze for Lightbeam","synthetic":true,"types":[]}];
implementors["wasmtime_obj"] = [{"text":"impl&lt;'a&gt; Freeze for ObjectBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ObjectBuilderTarget","synthetic":true,"types":[]}];
implementors["wasmtime_profiling"] = [{"text":"impl !Freeze for JitDumpAgent","synthetic":true,"types":[]},{"text":"impl Freeze for VTuneAgent","synthetic":true,"types":[]},{"text":"impl Freeze for NullProfilerAgent","synthetic":true,"types":[]}];
implementors["wasmtime_runtime"] = [{"text":"impl Freeze for ExportFunction","synthetic":true,"types":[]},{"text":"impl Freeze for ExportTable","synthetic":true,"types":[]},{"text":"impl Freeze for ExportMemory","synthetic":true,"types":[]},{"text":"impl Freeze for ExportGlobal","synthetic":true,"types":[]},{"text":"impl Freeze for VMExternRef","synthetic":true,"types":[]},{"text":"impl !Freeze for VMExternRefActivationsTable","synthetic":true,"types":[]},{"text":"impl !Freeze for StackMapRegistry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Imports&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for InstanceHandle","synthetic":true,"types":[]},{"text":"impl Freeze for LinkError","synthetic":true,"types":[]},{"text":"impl Freeze for GdbJitImageRegistration","synthetic":true,"types":[]},{"text":"impl Freeze for Mmap","synthetic":true,"types":[]},{"text":"impl Freeze for SignatureRegistry","synthetic":true,"types":[]},{"text":"impl !Freeze for Table","synthetic":true,"types":[]},{"text":"impl Freeze for VMCallerCheckedAnyfunc","synthetic":true,"types":[]},{"text":"impl Freeze for VMContext","synthetic":true,"types":[]},{"text":"impl Freeze for VMFunctionBody","synthetic":true,"types":[]},{"text":"impl Freeze for VMFunctionImport","synthetic":true,"types":[]},{"text":"impl Freeze for VMGlobalDefinition","synthetic":true,"types":[]},{"text":"impl Freeze for VMGlobalImport","synthetic":true,"types":[]},{"text":"impl !Freeze for VMInterrupts","synthetic":true,"types":[]},{"text":"impl Freeze for VMInvokeArgument","synthetic":true,"types":[]},{"text":"impl Freeze for VMMemoryDefinition","synthetic":true,"types":[]},{"text":"impl Freeze for VMMemoryImport","synthetic":true,"types":[]},{"text":"impl Freeze for VMSharedSignatureIndex","synthetic":true,"types":[]},{"text":"impl Freeze for VMTableDefinition","synthetic":true,"types":[]},{"text":"impl Freeze for VMTableImport","synthetic":true,"types":[]},{"text":"impl Freeze for Export","synthetic":true,"types":[]},{"text":"impl Freeze for InstantiationError","synthetic":true,"types":[]},{"text":"impl Freeze for TableElement","synthetic":true,"types":[]},{"text":"impl Freeze for Trap","synthetic":true,"types":[]}];
implementors["wasmtime_wasi"] = [{"text":"impl Freeze for Wasi","synthetic":true,"types":[]},{"text":"impl Freeze for Wasi","synthetic":true,"types":[]}];
implementors["wasmtime_wast"] = [{"text":"impl Freeze for WastContext","synthetic":true,"types":[]}];
implementors["wasmtime_wiggle"] = [{"text":"impl !Freeze for WasmtimeGuestMemory","synthetic":true,"types":[]}];
implementors["wiggle"] = [{"text":"impl Freeze for Region","synthetic":true,"types":[]},{"text":"impl Freeze for BorrowHandle","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for GuestPtr&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Pointee&gt;::Pointer: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for GuestSlice&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for GuestStr&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for GuestError","synthetic":true,"types":[]}];
implementors["wiggle_generate"] = [{"text":"impl Freeze for ErrorTransform","synthetic":true,"types":[]},{"text":"impl Freeze for UserErrorType","synthetic":true,"types":[]},{"text":"impl Freeze for Names","synthetic":true,"types":[]},{"text":"impl Freeze for Config","synthetic":true,"types":[]},{"text":"impl Freeze for Paths","synthetic":true,"types":[]},{"text":"impl Freeze for Literal","synthetic":true,"types":[]},{"text":"impl Freeze for CtxConf","synthetic":true,"types":[]},{"text":"impl Freeze for ErrorConf","synthetic":true,"types":[]},{"text":"impl Freeze for ErrorConfField","synthetic":true,"types":[]},{"text":"impl Freeze for ConfigField","synthetic":true,"types":[]},{"text":"impl Freeze for WitxConf","synthetic":true,"types":[]}];
implementors["wiggle_test"] = [{"text":"impl Freeze for MemAreas","synthetic":true,"types":[]},{"text":"impl !Freeze for HostMemory","synthetic":true,"types":[]},{"text":"impl Freeze for MemArea","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Freeze for WasiCtx&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["witx"] = [{"text":"impl Freeze for Document","synthetic":true,"types":[]},{"text":"impl Freeze for EnumDatatype","synthetic":true,"types":[]},{"text":"impl Freeze for EnumVariant","synthetic":true,"types":[]},{"text":"impl Freeze for FlagsDatatype","synthetic":true,"types":[]},{"text":"impl Freeze for FlagsMember","synthetic":true,"types":[]},{"text":"impl Freeze for HandleDatatype","synthetic":true,"types":[]},{"text":"impl Freeze for Id","synthetic":true,"types":[]},{"text":"impl Freeze for IntConst","synthetic":true,"types":[]},{"text":"impl Freeze for IntDatatype","synthetic":true,"types":[]},{"text":"impl Freeze for InterfaceFunc","synthetic":true,"types":[]},{"text":"impl Freeze for InterfaceFuncParam","synthetic":true,"types":[]},{"text":"impl Freeze for Module","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleImport","synthetic":true,"types":[]},{"text":"impl Freeze for NamedType","synthetic":true,"types":[]},{"text":"impl Freeze for StructDatatype","synthetic":true,"types":[]},{"text":"impl Freeze for StructMember","synthetic":true,"types":[]},{"text":"impl Freeze for UnionDatatype","synthetic":true,"types":[]},{"text":"impl Freeze for UnionVariant","synthetic":true,"types":[]},{"text":"impl Freeze for CoreFuncType","synthetic":true,"types":[]},{"text":"impl Freeze for CoreParamType","synthetic":true,"types":[]},{"text":"impl Freeze for Filesystem","synthetic":true,"types":[]},{"text":"impl Freeze for MockFs","synthetic":true,"types":[]},{"text":"impl Freeze for SizeAlign","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for StructMemberLayout&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for UnionLayout","synthetic":true,"types":[]},{"text":"impl Freeze for Location","synthetic":true,"types":[]},{"text":"impl Freeze for BuiltinType","synthetic":true,"types":[]},{"text":"impl Freeze for Definition","synthetic":true,"types":[]},{"text":"impl Freeze for Entry","synthetic":true,"types":[]},{"text":"impl Freeze for IntRepr","synthetic":true,"types":[]},{"text":"impl Freeze for InterfaceFuncParamPosition","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleEntry","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleImportVariant","synthetic":true,"types":[]},{"text":"impl Freeze for Type","synthetic":true,"types":[]},{"text":"impl Freeze for TypeRef","synthetic":true,"types":[]},{"text":"impl Freeze for AtomType","synthetic":true,"types":[]},{"text":"impl Freeze for CoreParamSignifies","synthetic":true,"types":[]},{"text":"impl Freeze for TypePassedBy","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for DeclSyntax&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SExpr","synthetic":true,"types":[]},{"text":"impl Freeze for RepEquality","synthetic":true,"types":[]},{"text":"impl Freeze for ValidationError","synthetic":true,"types":[]},{"text":"impl Freeze for WitxError","synthetic":true,"types":[]},{"text":"impl Freeze for Polyfill","synthetic":true,"types":[]},{"text":"impl Freeze for ModulePolyfill","synthetic":true,"types":[]},{"text":"impl Freeze for FuncPolyfill","synthetic":true,"types":[]},{"text":"impl Freeze for ParamPolyfill","synthetic":true,"types":[]},{"text":"impl Freeze for PolyfillError","synthetic":true,"types":[]},{"text":"impl Freeze for ParamUnknown","synthetic":true,"types":[]},{"text":"impl Freeze for TypePolyfill","synthetic":true,"types":[]}];
implementors["yanix"] = [{"text":"impl Freeze for ClockId","synthetic":true,"types":[]},{"text":"impl Freeze for Dir","synthetic":true,"types":[]},{"text":"impl Freeze for Entry","synthetic":true,"types":[]},{"text":"impl Freeze for SeekLoc","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for DirIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for FdFlags","synthetic":true,"types":[]},{"text":"impl Freeze for AtFlags","synthetic":true,"types":[]},{"text":"impl Freeze for Mode","synthetic":true,"types":[]},{"text":"impl Freeze for OFlags","synthetic":true,"types":[]},{"text":"impl Freeze for FileType","synthetic":true,"types":[]},{"text":"impl Freeze for FileTime","synthetic":true,"types":[]},{"text":"impl Freeze for PollFlags","synthetic":true,"types":[]},{"text":"impl Freeze for PollFd","synthetic":true,"types":[]},{"text":"impl Freeze for SockType","synthetic":true,"types":[]},{"text":"impl Freeze for PosixFadviseAdvice","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()