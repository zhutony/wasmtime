(function() {var implementors = {};
implementors["clif_json"] = [{"text":"impl Unpin for SerInst","synthetic":true,"types":[]},{"text":"impl Unpin for SerBlock","synthetic":true,"types":[]},{"text":"impl Unpin for SerDataFlowGraph","synthetic":true,"types":[]},{"text":"impl Unpin for SerSignature","synthetic":true,"types":[]},{"text":"impl Unpin for SerFunction","synthetic":true,"types":[]},{"text":"impl Unpin for SerObj","synthetic":true,"types":[]},{"text":"impl Unpin for SerInstData","synthetic":true,"types":[]}];
implementors["clif_util"] = [{"text":"impl Unpin for TestOptions","synthetic":true,"types":[]},{"text":"impl Unpin for PassOptions","synthetic":true,"types":[]},{"text":"impl Unpin for CompiledWithoutSupportOptions","synthetic":true,"types":[]},{"text":"impl Unpin for Commands","synthetic":true,"types":[]},{"text":"impl Unpin for Options","synthetic":true,"types":[]},{"text":"impl Unpin for RemoveInst","synthetic":true,"types":[]},{"text":"impl Unpin for ReplaceInstWithConst","synthetic":true,"types":[]},{"text":"impl Unpin for ReplaceInstWithTrap","synthetic":true,"types":[]},{"text":"impl Unpin for MoveInstToEntryBlock","synthetic":true,"types":[]},{"text":"impl Unpin for RemoveBlock","synthetic":true,"types":[]},{"text":"impl Unpin for ReplaceBlockParamWithConst","synthetic":true,"types":[]},{"text":"impl Unpin for RemoveUnusedEntities","synthetic":true,"types":[]},{"text":"impl Unpin for MergeBlocks","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CrashCheckContext&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ProgressStatus","synthetic":true,"types":[]},{"text":"impl Unpin for CheckResult","synthetic":true,"types":[]},{"text":"impl Unpin for Options","synthetic":true,"types":[]},{"text":"impl Unpin for Options","synthetic":true,"types":[]},{"text":"impl Unpin for PrintRelocs","synthetic":true,"types":[]},{"text":"impl Unpin for PrintTraps","synthetic":true,"types":[]},{"text":"impl Unpin for PrintStackMaps","synthetic":true,"types":[]},{"text":"impl Unpin for Options","synthetic":true,"types":[]},{"text":"impl Unpin for FileInterpreter","synthetic":true,"types":[]},{"text":"impl Unpin for FileInterpreterFailure","synthetic":true,"types":[]},{"text":"impl Unpin for Options","synthetic":true,"types":[]},{"text":"impl Unpin for Options","synthetic":true,"types":[]},{"text":"impl Unpin for OwnedFlagsOrIsa","synthetic":true,"types":[]},{"text":"impl Unpin for Options","synthetic":true,"types":[]},{"text":"impl Unpin for Options","synthetic":true,"types":[]},{"text":"impl Unpin for Options","synthetic":true,"types":[]},{"text":"impl Unpin for Color","synthetic":true,"types":[]}];
implementors["cranelift_bforest"] = [{"text":"impl&lt;K, V&gt; Unpin for Map&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, C&gt; Unpin for MapCursor&lt;'a, K, V, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for MapForest&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for MapIter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Unpin for Set&lt;K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, C&gt; Unpin for SetCursor&lt;'a, K, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Unpin for SetForest&lt;K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K&gt; Unpin for SetIter&lt;'a, K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["cranelift_codegen"] = [{"text":"impl Unpin for Context","synthetic":true,"types":[]},{"text":"impl Unpin for ValueLocRange","synthetic":true,"types":[]},{"text":"impl Unpin for CodegenError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for MemoryCodeSink&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for NullRelocSink","synthetic":true,"types":[]},{"text":"impl Unpin for NullStackMapSink","synthetic":true,"types":[]},{"text":"impl Unpin for NullTrapSink","synthetic":true,"types":[]},{"text":"impl Unpin for StackMap","synthetic":true,"types":[]},{"text":"impl Unpin for RegDiversions","synthetic":true,"types":[]},{"text":"impl Unpin for CodeInfo","synthetic":true,"types":[]},{"text":"impl Unpin for Reloc","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CFGPrinter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'f&gt; Unpin for FuncCursor&lt;'f&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'f&gt; Unpin for EncCursor&lt;'f&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for CursorPosition","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for DisplayList&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DominatorTree","synthetic":true,"types":[]},{"text":"impl Unpin for DominatorTreePreorder","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ChildIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for BlockPredecessor","synthetic":true,"types":[]},{"text":"impl Unpin for ControlFlowGraph","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PredIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'f, IIB&gt; Unpin for InsertBuilder&lt;'f, IIB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;IIB: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'f&gt; Unpin for ReplaceBuilder&lt;'f&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for AbiParam","synthetic":true,"types":[]},{"text":"impl Unpin for ExtFuncData","synthetic":true,"types":[]},{"text":"impl Unpin for Signature","synthetic":true,"types":[]},{"text":"impl Unpin for HeapData","synthetic":true,"types":[]},{"text":"impl Unpin for MemFlags","synthetic":true,"types":[]},{"text":"impl Unpin for ProgramPoint","synthetic":true,"types":[]},{"text":"impl Unpin for SourceLoc","synthetic":true,"types":[]},{"text":"impl Unpin for TableData","synthetic":true,"types":[]},{"text":"impl Unpin for ValueLabel","synthetic":true,"types":[]},{"text":"impl Unpin for ValueLabelStart","synthetic":true,"types":[]},{"text":"impl Unpin for AtomicRmwOp","synthetic":true,"types":[]},{"text":"impl Unpin for ArgumentExtension","synthetic":true,"types":[]},{"text":"impl Unpin for ArgumentPurpose","synthetic":true,"types":[]},{"text":"impl Unpin for ExternalName","synthetic":true,"types":[]},{"text":"impl Unpin for GlobalValueData","synthetic":true,"types":[]},{"text":"impl Unpin for HeapStyle","synthetic":true,"types":[]},{"text":"impl Unpin for LibCall","synthetic":true,"types":[]},{"text":"impl Unpin for ExpandedProgramPoint","synthetic":true,"types":[]},{"text":"impl Unpin for TrapCode","synthetic":true,"types":[]},{"text":"impl Unpin for ArgumentLoc","synthetic":true,"types":[]},{"text":"impl Unpin for ValueLoc","synthetic":true,"types":[]},{"text":"impl Unpin for ValueLabelAssignments","synthetic":true,"types":[]},{"text":"impl Unpin for ConstantData","synthetic":true,"types":[]},{"text":"impl Unpin for ConstantPoolEntry","synthetic":true,"types":[]},{"text":"impl Unpin for ConstantPool","synthetic":true,"types":[]},{"text":"impl Unpin for DataFlowGraph","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DisplayInst&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ValueDef","synthetic":true,"types":[]},{"text":"impl Unpin for Block","synthetic":true,"types":[]},{"text":"impl Unpin for Value","synthetic":true,"types":[]},{"text":"impl Unpin for Inst","synthetic":true,"types":[]},{"text":"impl Unpin for StackSlot","synthetic":true,"types":[]},{"text":"impl Unpin for GlobalValue","synthetic":true,"types":[]},{"text":"impl Unpin for Constant","synthetic":true,"types":[]},{"text":"impl Unpin for Immediate","synthetic":true,"types":[]},{"text":"impl Unpin for JumpTable","synthetic":true,"types":[]},{"text":"impl Unpin for FuncRef","synthetic":true,"types":[]},{"text":"impl Unpin for SigRef","synthetic":true,"types":[]},{"text":"impl Unpin for Heap","synthetic":true,"types":[]},{"text":"impl Unpin for Table","synthetic":true,"types":[]},{"text":"impl Unpin for AnyEntity","synthetic":true,"types":[]},{"text":"impl Unpin for Function","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DisplayFunctionAnnotations&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DisplayFunction&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for InstOffsetIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Imm64","synthetic":true,"types":[]},{"text":"impl Unpin for Uimm64","synthetic":true,"types":[]},{"text":"impl Unpin for Uimm32","synthetic":true,"types":[]},{"text":"impl Unpin for V128Imm","synthetic":true,"types":[]},{"text":"impl Unpin for Offset32","synthetic":true,"types":[]},{"text":"impl Unpin for Ieee32","synthetic":true,"types":[]},{"text":"impl Unpin for Ieee64","synthetic":true,"types":[]},{"text":"impl Unpin for VariableArgs","synthetic":true,"types":[]},{"text":"impl Unpin for OpcodeConstraints","synthetic":true,"types":[]},{"text":"impl Unpin for ValueTypeSet","synthetic":true,"types":[]},{"text":"impl Unpin for InstructionFormat","synthetic":true,"types":[]},{"text":"impl Unpin for InstructionData","synthetic":true,"types":[]},{"text":"impl Unpin for Opcode","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for BranchInfo&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CallInfo&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ResolvedConstraint","synthetic":true,"types":[]},{"text":"impl Unpin for JumpTableData","synthetic":true,"types":[]},{"text":"impl Unpin for Layout","synthetic":true,"types":[]},{"text":"impl&lt;'f&gt; Unpin for Blocks&lt;'f&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'f&gt; Unpin for Insts&lt;'f&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for StackSlotData","synthetic":true,"types":[]},{"text":"impl Unpin for StackLayoutInfo","synthetic":true,"types":[]},{"text":"impl Unpin for StackSlots","synthetic":true,"types":[]},{"text":"impl Unpin for StackSlotKind","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl Unpin for BranchRange","synthetic":true,"types":[]},{"text":"impl Unpin for OperandConstraint","synthetic":true,"types":[]},{"text":"impl Unpin for RecipeConstraints","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Encodings&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for EncInfo","synthetic":true,"types":[]},{"text":"impl Unpin for Encoding","synthetic":true,"types":[]},{"text":"impl Unpin for StackBaseMask","synthetic":true,"types":[]},{"text":"impl Unpin for StackRef","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl Unpin for TargetFrontendConfig","synthetic":true,"types":[]},{"text":"impl Unpin for CallConv","synthetic":true,"types":[]},{"text":"impl Unpin for ConstraintKind","synthetic":true,"types":[]},{"text":"impl Unpin for StackBase","synthetic":true,"types":[]},{"text":"impl Unpin for LookupError","synthetic":true,"types":[]},{"text":"impl Unpin for UnwindInfo","synthetic":true,"types":[]},{"text":"impl Unpin for UnwindInfo","synthetic":true,"types":[]},{"text":"impl Unpin for RegisterMappingError","synthetic":true,"types":[]},{"text":"impl Unpin for UnwindInfo","synthetic":true,"types":[]},{"text":"impl Unpin for RegBank","synthetic":true,"types":[]},{"text":"impl Unpin for RegClassData","synthetic":true,"types":[]},{"text":"impl Unpin for RegClassIndex","synthetic":true,"types":[]},{"text":"impl Unpin for RegInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DisplayRegUnit&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Loop","synthetic":true,"types":[]},{"text":"impl Unpin for LoopAnalysis","synthetic":true,"types":[]},{"text":"impl Unpin for MachCompileResult","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for MachTerminator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for InstColor","synthetic":true,"types":[]},{"text":"impl Unpin for LowerInput","synthetic":true,"types":[]},{"text":"impl&lt;'func, I&gt; Unpin for Lower&lt;'func, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RelocDistance","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for VCode&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for VCodeBuilder&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for BlockLoweringOrder","synthetic":true,"types":[]},{"text":"impl Unpin for LoweredBlock","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; Unpin for ABICalleeImpl&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;M as ABIMachineSpec&gt;::I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; Unpin for ABICallerImpl&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ABIArg","synthetic":true,"types":[]},{"text":"impl Unpin for ArgsOrRets","synthetic":true,"types":[]},{"text":"impl Unpin for InstIsSafepoint","synthetic":true,"types":[]},{"text":"impl Unpin for StackAMode","synthetic":true,"types":[]},{"text":"impl Unpin for CallDest","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for MachBuffer&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as MachInst&gt;::LabelUse: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for MachBufferFinalized","synthetic":true,"types":[]},{"text":"impl Unpin for MachLabel","synthetic":true,"types":[]},{"text":"impl Unpin for MachSrcLoc","synthetic":true,"types":[]},{"text":"impl Unpin for MachStackMap","synthetic":true,"types":[]},{"text":"impl Unpin for StackMapExtent","synthetic":true,"types":[]},{"text":"impl Unpin for TargetIsaAdapter","synthetic":true,"types":[]},{"text":"impl Unpin for AtomicRmwOp","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PredicateView&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Flags","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for FlagsOrIsa&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SetError","synthetic":true,"types":[]},{"text":"impl Unpin for Regalloc","synthetic":true,"types":[]},{"text":"impl Unpin for OptLevel","synthetic":true,"types":[]},{"text":"impl Unpin for TlsModel","synthetic":true,"types":[]},{"text":"impl Unpin for LibcallCallConv","synthetic":true,"types":[]},{"text":"impl Unpin for Template","synthetic":true,"types":[]},{"text":"impl Unpin for Descriptor","synthetic":true,"types":[]},{"text":"impl Unpin for Detail","synthetic":true,"types":[]},{"text":"impl Unpin for PassTimes","synthetic":true,"types":[]},{"text":"impl Unpin for TimingToken","synthetic":true,"types":[]},{"text":"impl Unpin for VerifierError","synthetic":true,"types":[]},{"text":"impl Unpin for VerifierErrors","synthetic":true,"types":[]},{"text":"impl Unpin for PlainWriter","synthetic":true,"types":[]}];
implementors["cranelift_codegen_meta"] = [{"text":"impl Unpin for Def","synthetic":true,"types":[]},{"text":"impl Unpin for DefPool","synthetic":true,"types":[]},{"text":"impl Unpin for DefIndex","synthetic":true,"types":[]},{"text":"impl Unpin for Block","synthetic":true,"types":[]},{"text":"impl Unpin for BlockPool","synthetic":true,"types":[]},{"text":"impl Unpin for Var","synthetic":true,"types":[]},{"text":"impl Unpin for VarIndex","synthetic":true,"types":[]},{"text":"impl Unpin for VarPool","synthetic":true,"types":[]},{"text":"impl Unpin for ConstPool","synthetic":true,"types":[]},{"text":"impl Unpin for Apply","synthetic":true,"types":[]},{"text":"impl Unpin for DummyVar","synthetic":true,"types":[]},{"text":"impl Unpin for DummyConstant","synthetic":true,"types":[]},{"text":"impl Unpin for DummyDef","synthetic":true,"types":[]},{"text":"impl Unpin for ExprBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Expr","synthetic":true,"types":[]},{"text":"impl Unpin for Literal","synthetic":true,"types":[]},{"text":"impl Unpin for PatternPosition","synthetic":true,"types":[]},{"text":"impl Unpin for DummyExpr","synthetic":true,"types":[]},{"text":"impl Unpin for CpuMode","synthetic":true,"types":[]},{"text":"impl Unpin for EncodingContent","synthetic":true,"types":[]},{"text":"impl Unpin for EncodingBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for FormatField","synthetic":true,"types":[]},{"text":"impl Unpin for InstructionFormat","synthetic":true,"types":[]},{"text":"impl Unpin for FormatStructure","synthetic":true,"types":[]},{"text":"impl Unpin for InstructionFormatBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for OpcodeNumber","synthetic":true,"types":[]},{"text":"impl&lt;'all_inst&gt; Unpin for InstructionGroupBuilder&lt;'all_inst&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for InstructionGroup","synthetic":true,"types":[]},{"text":"impl Unpin for PolymorphicInfo","synthetic":true,"types":[]},{"text":"impl Unpin for InstructionContent","synthetic":true,"types":[]},{"text":"impl Unpin for InstructionBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for BoundInstruction","synthetic":true,"types":[]},{"text":"impl Unpin for FormatPredicateNode","synthetic":true,"types":[]},{"text":"impl Unpin for InstructionPredicate","synthetic":true,"types":[]},{"text":"impl Unpin for InstructionPredicateNumber","synthetic":true,"types":[]},{"text":"impl Unpin for InstructionPredicateRegistry","synthetic":true,"types":[]},{"text":"impl Unpin for ValueTypeOrAny","synthetic":true,"types":[]},{"text":"impl Unpin for BindParameter","synthetic":true,"types":[]},{"text":"impl Unpin for Immediate","synthetic":true,"types":[]},{"text":"impl Unpin for FormatPredicateKind","synthetic":true,"types":[]},{"text":"impl Unpin for TypePredicateNode","synthetic":true,"types":[]},{"text":"impl Unpin for InstructionPredicateNode","synthetic":true,"types":[]},{"text":"impl Unpin for InstSpec","synthetic":true,"types":[]},{"text":"impl Unpin for TargetIsa","synthetic":true,"types":[]},{"text":"impl Unpin for Operand","synthetic":true,"types":[]},{"text":"impl Unpin for OperandKind","synthetic":true,"types":[]},{"text":"impl Unpin for OperandKindFields","synthetic":true,"types":[]},{"text":"impl Unpin for Register","synthetic":true,"types":[]},{"text":"impl Unpin for Stack","synthetic":true,"types":[]},{"text":"impl Unpin for BranchRange","synthetic":true,"types":[]},{"text":"impl Unpin for EncodingRecipe","synthetic":true,"types":[]},{"text":"impl Unpin for EncodingRecipeNumber","synthetic":true,"types":[]},{"text":"impl Unpin for EncodingRecipeBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for OperandConstraint","synthetic":true,"types":[]},{"text":"impl Unpin for RegBankIndex","synthetic":true,"types":[]},{"text":"impl Unpin for RegBank","synthetic":true,"types":[]},{"text":"impl Unpin for RegClassIndex","synthetic":true,"types":[]},{"text":"impl Unpin for RegClass","synthetic":true,"types":[]},{"text":"impl Unpin for RegClassBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for RegBankBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for IsaRegsBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for IsaRegs","synthetic":true,"types":[]},{"text":"impl Unpin for RegClassProto","synthetic":true,"types":[]},{"text":"impl Unpin for BoolSettingIndex","synthetic":true,"types":[]},{"text":"impl Unpin for BoolSetting","synthetic":true,"types":[]},{"text":"impl Unpin for Setting","synthetic":true,"types":[]},{"text":"impl Unpin for PresetIndex","synthetic":true,"types":[]},{"text":"impl Unpin for Preset","synthetic":true,"types":[]},{"text":"impl Unpin for SettingGroup","synthetic":true,"types":[]},{"text":"impl Unpin for ProtoSetting","synthetic":true,"types":[]},{"text":"impl Unpin for ProtoPredicate","synthetic":true,"types":[]},{"text":"impl Unpin for Predicate","synthetic":true,"types":[]},{"text":"impl Unpin for SettingGroupBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for SpecificSetting","synthetic":true,"types":[]},{"text":"impl Unpin for PresetType","synthetic":true,"types":[]},{"text":"impl Unpin for ProtoSpecificSetting","synthetic":true,"types":[]},{"text":"impl Unpin for PredicateNode","synthetic":true,"types":[]},{"text":"impl Unpin for TypeEnvironment","synthetic":true,"types":[]},{"text":"impl Unpin for Constraint","synthetic":true,"types":[]},{"text":"impl Unpin for TypeEnvRank","synthetic":true,"types":[]},{"text":"impl Unpin for LaneTypeIterator","synthetic":true,"types":[]},{"text":"impl Unpin for VectorType","synthetic":true,"types":[]},{"text":"impl Unpin for SpecialTypeIterator","synthetic":true,"types":[]},{"text":"impl Unpin for ReferenceType","synthetic":true,"types":[]},{"text":"impl Unpin for ReferenceTypeIterator","synthetic":true,"types":[]},{"text":"impl Unpin for ValueType","synthetic":true,"types":[]},{"text":"impl Unpin for LaneType","synthetic":true,"types":[]},{"text":"impl Unpin for SpecialType","synthetic":true,"types":[]},{"text":"impl Unpin for TypeVarContent","synthetic":true,"types":[]},{"text":"impl Unpin for TypeVar","synthetic":true,"types":[]},{"text":"impl Unpin for TypeVarParent","synthetic":true,"types":[]},{"text":"impl Unpin for TypeSet","synthetic":true,"types":[]},{"text":"impl Unpin for TypeSetBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for DerivedFunc","synthetic":true,"types":[]},{"text":"impl Unpin for Interval","synthetic":true,"types":[]},{"text":"impl Unpin for Transform","synthetic":true,"types":[]},{"text":"impl Unpin for TransformGroup","synthetic":true,"types":[]},{"text":"impl Unpin for TransformGroupIndex","synthetic":true,"types":[]},{"text":"impl Unpin for TransformGroupBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for TransformGroups","synthetic":true,"types":[]},{"text":"impl Unpin for Formatter","synthetic":true,"types":[]},{"text":"impl Unpin for Match","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorInner","synthetic":true,"types":[]},{"text":"impl Unpin for Isa","synthetic":true,"types":[]},{"text":"impl&lt;'defs&gt; Unpin for PerCpuModeEncodings&lt;'defs&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for RecipeGroup","synthetic":true,"types":[]},{"text":"impl Unpin for PerCpuModeEncodings","synthetic":true,"types":[]},{"text":"impl&lt;'builder&gt; Unpin for RecipeGroup&lt;'builder&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'builder&gt; Unpin for Template&lt;'builder&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for RecipePrefixKind","synthetic":true,"types":[]},{"text":"impl&lt;'cpu_mode&gt; Unpin for Level1Table&lt;'cpu_mode&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Level2HashTableEntry","synthetic":true,"types":[]},{"text":"impl Unpin for Level2Table","synthetic":true,"types":[]},{"text":"impl Unpin for Encoder","synthetic":true,"types":[]},{"text":"impl Unpin for EncodingList","synthetic":true,"types":[]},{"text":"impl Unpin for ParentGroup","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SettingOrPreset&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Definitions","synthetic":true,"types":[]},{"text":"impl Unpin for EntityRefs","synthetic":true,"types":[]},{"text":"impl Unpin for Formats","synthetic":true,"types":[]},{"text":"impl Unpin for Immediates","synthetic":true,"types":[]},{"text":"impl Unpin for BoolIterator","synthetic":true,"types":[]},{"text":"impl Unpin for IntIterator","synthetic":true,"types":[]},{"text":"impl Unpin for FloatIterator","synthetic":true,"types":[]},{"text":"impl Unpin for FlagIterator","synthetic":true,"types":[]},{"text":"impl Unpin for ReferenceIterator","synthetic":true,"types":[]},{"text":"impl Unpin for Bool","synthetic":true,"types":[]},{"text":"impl Unpin for Int","synthetic":true,"types":[]},{"text":"impl Unpin for Float","synthetic":true,"types":[]},{"text":"impl Unpin for Flag","synthetic":true,"types":[]},{"text":"impl Unpin for Reference","synthetic":true,"types":[]},{"text":"impl&lt;'entries, T&gt; Unpin for UniqueTable&lt;'entries, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for UniqueSeqTable&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["cranelift_codegen_shared"] = [{"text":"impl Unpin for IntCC","synthetic":true,"types":[]},{"text":"impl Unpin for FloatCC","synthetic":true,"types":[]},{"text":"impl Unpin for EncodingBits","synthetic":true,"types":[]},{"text":"impl Unpin for OpcodePrefix","synthetic":true,"types":[]}];
implementors["cranelift_entity"] = [{"text":"impl&lt;K, V&gt; Unpin for BoxedSlice&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Iter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for IterMut&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Unpin for Keys&lt;K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for EntityList&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ListPool&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for SecondaryMap&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for PrimaryMap&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Unpin for EntitySet&lt;K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for SparseMap&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for PackedOption&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["cranelift_filetests"] = [{"text":"impl Unpin for SingleFunctionCompiler","synthetic":true,"types":[]}];
implementors["cranelift_frontend"] = [{"text":"impl&lt;'a&gt; Unpin for FunctionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for FunctionBuilderContext","synthetic":true,"types":[]},{"text":"impl Unpin for Switch","synthetic":true,"types":[]},{"text":"impl Unpin for Variable","synthetic":true,"types":[]}];
implementors["cranelift_interpreter"] = [{"text":"impl Unpin for Environment","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Frame&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Interpreter","synthetic":true,"types":[]},{"text":"impl Unpin for ControlFlow","synthetic":true,"types":[]},{"text":"impl Unpin for Trap","synthetic":true,"types":[]}];
implementors["cranelift_module"] = [{"text":"impl Unpin for DataContext","synthetic":true,"types":[]},{"text":"impl Unpin for DataDescription","synthetic":true,"types":[]},{"text":"impl Unpin for DataId","synthetic":true,"types":[]},{"text":"impl Unpin for FuncId","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for Module&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CompiledData: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CompiledFunction: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Unpin for ModuleFunction&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as Backend&gt;::CompiledFunction: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; Unpin for ModuleNamespace&lt;'a, B&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for TrapSite","synthetic":true,"types":[]},{"text":"impl Unpin for Init","synthetic":true,"types":[]},{"text":"impl Unpin for FuncOrDataId","synthetic":true,"types":[]},{"text":"impl Unpin for Linkage","synthetic":true,"types":[]},{"text":"impl Unpin for ModuleError","synthetic":true,"types":[]}];
implementors["cranelift_object"] = [{"text":"impl Unpin for ObjectBackend","synthetic":true,"types":[]},{"text":"impl Unpin for ObjectBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for ObjectProduct","synthetic":true,"types":[]}];
implementors["cranelift_reader"] = [{"text":"impl Unpin for Location","synthetic":true,"types":[]},{"text":"impl Unpin for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ParseOptions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Invocation","synthetic":true,"types":[]},{"text":"impl Unpin for SourceMap","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TestCommand&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Comment&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Details&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TestFile&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for IsaSpec","synthetic":true,"types":[]},{"text":"impl Unpin for ParseOptionError","synthetic":true,"types":[]},{"text":"impl Unpin for Comparison","synthetic":true,"types":[]},{"text":"impl Unpin for DataValue","synthetic":true,"types":[]},{"text":"impl Unpin for DataValueCastFailure","synthetic":true,"types":[]},{"text":"impl Unpin for RunCommand","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TestOption&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Feature&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["cranelift_simplejit"] = [{"text":"impl Unpin for SimpleJITBackend","synthetic":true,"types":[]},{"text":"impl Unpin for SimpleJITBuilder","synthetic":true,"types":[]}];
implementors["cranelift_wasm"] = [{"text":"impl Unpin for DummyEnvironment","synthetic":true,"types":[]},{"text":"impl Unpin for WasmFuncType","synthetic":true,"types":[]},{"text":"impl Unpin for FuncTranslator","synthetic":true,"types":[]},{"text":"impl Unpin for FuncTranslationState","synthetic":true,"types":[]},{"text":"impl Unpin for ModuleTranslationState","synthetic":true,"types":[]},{"text":"impl Unpin for DataIndex","synthetic":true,"types":[]},{"text":"impl Unpin for DefinedFuncIndex","synthetic":true,"types":[]},{"text":"impl Unpin for DefinedGlobalIndex","synthetic":true,"types":[]},{"text":"impl Unpin for DefinedMemoryIndex","synthetic":true,"types":[]},{"text":"impl Unpin for DefinedTableIndex","synthetic":true,"types":[]},{"text":"impl Unpin for ElemIndex","synthetic":true,"types":[]},{"text":"impl Unpin for FuncIndex","synthetic":true,"types":[]},{"text":"impl Unpin for Global","synthetic":true,"types":[]},{"text":"impl Unpin for GlobalIndex","synthetic":true,"types":[]},{"text":"impl Unpin for Memory","synthetic":true,"types":[]},{"text":"impl Unpin for MemoryIndex","synthetic":true,"types":[]},{"text":"impl Unpin for SignatureIndex","synthetic":true,"types":[]},{"text":"impl Unpin for Table","synthetic":true,"types":[]},{"text":"impl Unpin for TableIndex","synthetic":true,"types":[]},{"text":"impl Unpin for GlobalVariable","synthetic":true,"types":[]},{"text":"impl Unpin for ReturnMode","synthetic":true,"types":[]},{"text":"impl Unpin for WasmError","synthetic":true,"types":[]},{"text":"impl Unpin for WasmType","synthetic":true,"types":[]},{"text":"impl Unpin for GlobalInit","synthetic":true,"types":[]},{"text":"impl Unpin for TableElementType","synthetic":true,"types":[]}];
implementors["lightbeam"] = [{"text":"impl&lt;'module, M&gt; Unpin for CodeGenSession&lt;'module, M&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for NullOffsetSink","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Sinks&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ExecutableModule","synthetic":true,"types":[]},{"text":"impl Unpin for TranslatedModule","synthetic":true,"types":[]},{"text":"impl Unpin for ExecutionError","synthetic":true,"types":[]},{"text":"impl Unpin for Ieee32","synthetic":true,"types":[]},{"text":"impl Unpin for Ieee64","synthetic":true,"types":[]},{"text":"impl Unpin for SignfulInt","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Unpin for BrTable&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Unpin for BrTargetDrop&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for MemoryImmediate","synthetic":true,"types":[]},{"text":"impl&lt;'a, M&gt; Unpin for MicrowasmConv&lt;'a, M&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for OpSig","synthetic":true,"types":[]},{"text":"impl Unpin for Value","synthetic":true,"types":[]},{"text":"impl Unpin for Signedness","synthetic":true,"types":[]},{"text":"impl Unpin for Size","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Type&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for NameTag","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Unpin for BrTarget&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Label&gt; Unpin for Operator&lt;Label&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Label: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["peepmatic"] = [{"text":"impl&lt;'a, TOperator&gt; Unpin for Optimizations&lt;'a, TOperator&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TOperator: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; Unpin for Optimization&lt;'a, TOperator&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TOperator: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; Unpin for Lhs&lt;'a, TOperator&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TOperator: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; Unpin for Integer&lt;'a, TOperator&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; Unpin for Boolean&lt;'a, TOperator&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; Unpin for ConditionCode&lt;'a, TOperator&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; Unpin for Constant&lt;'a, TOperator&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; Unpin for Variable&lt;'a, TOperator&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator, TOperand&gt; Unpin for Operation&lt;'a, TOperator, TOperand&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TOperand: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;TOperator: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; Unpin for Precondition&lt;'a, TOperator&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; Unpin for Unquote&lt;'a, TOperator&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TOperator: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; Unpin for Dfs&lt;'a, TOperator&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for VerifyError","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; Unpin for DynAstRef&lt;'a, TOperator&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; Unpin for Pattern&lt;'a, TOperator&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TOperator: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; Unpin for ValueLiteral&lt;'a, TOperator&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Constraint","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; Unpin for ConstraintOperand&lt;'a, TOperator&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, TOperator&gt; Unpin for Rhs&lt;'a, TOperator&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TOperator: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for TraversalEvent","synthetic":true,"types":[]}];
implementors["peepmatic_automata"] = [{"text":"impl&lt;TAlphabet, TState, TOutput&gt; Unpin for Builder&lt;TAlphabet, TState, TOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TAlphabet: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;TOutput: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;TState: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for State","synthetic":true,"types":[]},{"text":"impl&lt;'a, TAlphabet, TState, TOutput&gt; Unpin for InsertionBuilder&lt;'a, TAlphabet, TState, TOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TOutput: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TAlphabet, TState, TOutput&gt; Unpin for Automaton&lt;TAlphabet, TState, TOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TAlphabet: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;TOutput: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;TState: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, TAlphabet, TState, TOutput&gt; Unpin for Query&lt;'a, TAlphabet, TState, TOutput&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DebugDotFmt","synthetic":true,"types":[]},{"text":"impl Unpin for DisplayDotFmt","synthetic":true,"types":[]}];
implementors["peepmatic_runtime"] = [{"text":"impl Unpin for ConditionCode","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for IntegerId","synthetic":true,"types":[]},{"text":"impl Unpin for IntegerInterner","synthetic":true,"types":[]},{"text":"impl&lt;TOperator&gt; Unpin for Optimizations&lt;TOperator&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TOperator: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TOperator&gt; Unpin for Optimization&lt;TOperator&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TOperator: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Else","synthetic":true,"types":[]},{"text":"impl&lt;TOperator&gt; Unpin for Increment&lt;TOperator&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TOperator: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for LhsId","synthetic":true,"types":[]},{"text":"impl Unpin for RhsId","synthetic":true,"types":[]},{"text":"impl Unpin for MatchOp","synthetic":true,"types":[]},{"text":"impl&lt;TOperator&gt; Unpin for Action&lt;TOperator&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TOperator: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TOperator&gt; Unpin for PeepholeOptimizations&lt;TOperator&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'peep, 'ctx, TInstructionSet&gt; Unpin for PeepholeOptimizer&lt;'peep, 'ctx, TInstructionSet&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TInstructionSet: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;TInstructionSet as InstructionSet&lt;'ctx&gt;&gt;::Instruction: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;TInstructionSet as InstructionSet&lt;'ctx&gt;&gt;::Operator: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Constant","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Part&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Path&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for PathId","synthetic":true,"types":[]},{"text":"impl Unpin for PathInterner","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl Unpin for BitWidth","synthetic":true,"types":[]},{"text":"impl Unpin for Kind","synthetic":true,"types":[]},{"text":"impl Unpin for UnquoteOperator","synthetic":true,"types":[]}];
implementors["peepmatic_test"] = [{"text":"impl Unpin for Instruction","synthetic":true,"types":[]},{"text":"impl Unpin for InstructionData","synthetic":true,"types":[]},{"text":"impl Unpin for Program","synthetic":true,"types":[]},{"text":"impl Unpin for TestIsa","synthetic":true,"types":[]},{"text":"impl Unpin for Immediate","synthetic":true,"types":[]}];
implementors["peepmatic_test_operator"] = [{"text":"impl Unpin for TestOperator","synthetic":true,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Unpin for TokenStream","synthetic":true,"types":[]},{"text":"impl Unpin for LexError","synthetic":true,"types":[]},{"text":"impl Unpin for Span","synthetic":true,"types":[]},{"text":"impl Unpin for Group","synthetic":true,"types":[]},{"text":"impl Unpin for Punct","synthetic":true,"types":[]},{"text":"impl Unpin for Ident","synthetic":true,"types":[]},{"text":"impl Unpin for Literal","synthetic":true,"types":[]},{"text":"impl Unpin for TokenTree","synthetic":true,"types":[]},{"text":"impl Unpin for Delimiter","synthetic":true,"types":[]},{"text":"impl Unpin for Spacing","synthetic":true,"types":[]},{"text":"impl Unpin for IntoIter","synthetic":true,"types":[]}];
implementors["serde"] = [{"text":"impl Unpin for IgnoredAny","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Unexpected&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for UnitDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for BoolDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for IsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for UsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for F32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for F64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for CharDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Unpin for StrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Unpin for BorrowedStrDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for StringDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Unpin for CowStrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Unpin for BorrowedBytesDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; Unpin for SeqDeserializer&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for SeqAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, I, E&gt; Unpin for MapDeserializer&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as Iterator&gt;::Item as Pair&gt;::Second: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for MapAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ok, Error&gt; Unpin for Impossible&lt;Ok, Error&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Error: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ok: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["syn"] = [{"text":"impl Unpin for Attribute","synthetic":true,"types":[]},{"text":"impl Unpin for MetaList","synthetic":true,"types":[]},{"text":"impl Unpin for MetaNameValue","synthetic":true,"types":[]},{"text":"impl Unpin for Field","synthetic":true,"types":[]},{"text":"impl Unpin for FieldsNamed","synthetic":true,"types":[]},{"text":"impl Unpin for FieldsUnnamed","synthetic":true,"types":[]},{"text":"impl Unpin for Variant","synthetic":true,"types":[]},{"text":"impl Unpin for VisCrate","synthetic":true,"types":[]},{"text":"impl Unpin for VisPublic","synthetic":true,"types":[]},{"text":"impl Unpin for VisRestricted","synthetic":true,"types":[]},{"text":"impl Unpin for Arm","synthetic":true,"types":[]},{"text":"impl Unpin for FieldValue","synthetic":true,"types":[]},{"text":"impl Unpin for Label","synthetic":true,"types":[]},{"text":"impl Unpin for MethodTurbofish","synthetic":true,"types":[]},{"text":"impl Unpin for ExprArray","synthetic":true,"types":[]},{"text":"impl Unpin for ExprAssign","synthetic":true,"types":[]},{"text":"impl Unpin for ExprAssignOp","synthetic":true,"types":[]},{"text":"impl Unpin for ExprAsync","synthetic":true,"types":[]},{"text":"impl Unpin for ExprAwait","synthetic":true,"types":[]},{"text":"impl Unpin for ExprBinary","synthetic":true,"types":[]},{"text":"impl Unpin for ExprBlock","synthetic":true,"types":[]},{"text":"impl Unpin for ExprBox","synthetic":true,"types":[]},{"text":"impl Unpin for ExprBreak","synthetic":true,"types":[]},{"text":"impl Unpin for ExprCall","synthetic":true,"types":[]},{"text":"impl Unpin for ExprCast","synthetic":true,"types":[]},{"text":"impl Unpin for ExprClosure","synthetic":true,"types":[]},{"text":"impl Unpin for ExprContinue","synthetic":true,"types":[]},{"text":"impl Unpin for ExprField","synthetic":true,"types":[]},{"text":"impl Unpin for ExprForLoop","synthetic":true,"types":[]},{"text":"impl Unpin for ExprGroup","synthetic":true,"types":[]},{"text":"impl Unpin for ExprIf","synthetic":true,"types":[]},{"text":"impl Unpin for ExprIndex","synthetic":true,"types":[]},{"text":"impl Unpin for ExprLet","synthetic":true,"types":[]},{"text":"impl Unpin for ExprLit","synthetic":true,"types":[]},{"text":"impl Unpin for ExprLoop","synthetic":true,"types":[]},{"text":"impl Unpin for ExprMacro","synthetic":true,"types":[]},{"text":"impl Unpin for ExprMatch","synthetic":true,"types":[]},{"text":"impl Unpin for ExprMethodCall","synthetic":true,"types":[]},{"text":"impl Unpin for ExprParen","synthetic":true,"types":[]},{"text":"impl Unpin for ExprPath","synthetic":true,"types":[]},{"text":"impl Unpin for ExprRange","synthetic":true,"types":[]},{"text":"impl Unpin for ExprReference","synthetic":true,"types":[]},{"text":"impl Unpin for ExprRepeat","synthetic":true,"types":[]},{"text":"impl Unpin for ExprReturn","synthetic":true,"types":[]},{"text":"impl Unpin for ExprStruct","synthetic":true,"types":[]},{"text":"impl Unpin for ExprTry","synthetic":true,"types":[]},{"text":"impl Unpin for ExprTryBlock","synthetic":true,"types":[]},{"text":"impl Unpin for ExprTuple","synthetic":true,"types":[]},{"text":"impl Unpin for ExprType","synthetic":true,"types":[]},{"text":"impl Unpin for ExprUnary","synthetic":true,"types":[]},{"text":"impl Unpin for ExprUnsafe","synthetic":true,"types":[]},{"text":"impl Unpin for ExprWhile","synthetic":true,"types":[]},{"text":"impl Unpin for ExprYield","synthetic":true,"types":[]},{"text":"impl Unpin for Index","synthetic":true,"types":[]},{"text":"impl Unpin for BoundLifetimes","synthetic":true,"types":[]},{"text":"impl Unpin for ConstParam","synthetic":true,"types":[]},{"text":"impl Unpin for Generics","synthetic":true,"types":[]},{"text":"impl Unpin for LifetimeDef","synthetic":true,"types":[]},{"text":"impl Unpin for PredicateEq","synthetic":true,"types":[]},{"text":"impl Unpin for PredicateLifetime","synthetic":true,"types":[]},{"text":"impl Unpin for PredicateType","synthetic":true,"types":[]},{"text":"impl Unpin for TraitBound","synthetic":true,"types":[]},{"text":"impl Unpin for TypeParam","synthetic":true,"types":[]},{"text":"impl Unpin for WhereClause","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ImplGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Turbofish&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TypeGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ForeignItemFn","synthetic":true,"types":[]},{"text":"impl Unpin for ForeignItemMacro","synthetic":true,"types":[]},{"text":"impl Unpin for ForeignItemStatic","synthetic":true,"types":[]},{"text":"impl Unpin for ForeignItemType","synthetic":true,"types":[]},{"text":"impl Unpin for ImplItemConst","synthetic":true,"types":[]},{"text":"impl Unpin for ImplItemMacro","synthetic":true,"types":[]},{"text":"impl Unpin for ImplItemMethod","synthetic":true,"types":[]},{"text":"impl Unpin for ImplItemType","synthetic":true,"types":[]},{"text":"impl Unpin for ItemConst","synthetic":true,"types":[]},{"text":"impl Unpin for ItemEnum","synthetic":true,"types":[]},{"text":"impl Unpin for ItemExternCrate","synthetic":true,"types":[]},{"text":"impl Unpin for ItemFn","synthetic":true,"types":[]},{"text":"impl Unpin for ItemForeignMod","synthetic":true,"types":[]},{"text":"impl Unpin for ItemImpl","synthetic":true,"types":[]},{"text":"impl Unpin for ItemMacro","synthetic":true,"types":[]},{"text":"impl Unpin for ItemMacro2","synthetic":true,"types":[]},{"text":"impl Unpin for ItemMod","synthetic":true,"types":[]},{"text":"impl Unpin for ItemStatic","synthetic":true,"types":[]},{"text":"impl Unpin for ItemStruct","synthetic":true,"types":[]},{"text":"impl Unpin for ItemTrait","synthetic":true,"types":[]},{"text":"impl Unpin for ItemTraitAlias","synthetic":true,"types":[]},{"text":"impl Unpin for ItemType","synthetic":true,"types":[]},{"text":"impl Unpin for ItemUnion","synthetic":true,"types":[]},{"text":"impl Unpin for ItemUse","synthetic":true,"types":[]},{"text":"impl Unpin for Receiver","synthetic":true,"types":[]},{"text":"impl Unpin for Signature","synthetic":true,"types":[]},{"text":"impl Unpin for TraitItemConst","synthetic":true,"types":[]},{"text":"impl Unpin for TraitItemMacro","synthetic":true,"types":[]},{"text":"impl Unpin for TraitItemMethod","synthetic":true,"types":[]},{"text":"impl Unpin for TraitItemType","synthetic":true,"types":[]},{"text":"impl Unpin for UseGlob","synthetic":true,"types":[]},{"text":"impl Unpin for UseGroup","synthetic":true,"types":[]},{"text":"impl Unpin for UseName","synthetic":true,"types":[]},{"text":"impl Unpin for UsePath","synthetic":true,"types":[]},{"text":"impl Unpin for UseRename","synthetic":true,"types":[]},{"text":"impl Unpin for File","synthetic":true,"types":[]},{"text":"impl Unpin for Lifetime","synthetic":true,"types":[]},{"text":"impl Unpin for LitBool","synthetic":true,"types":[]},{"text":"impl Unpin for LitByte","synthetic":true,"types":[]},{"text":"impl Unpin for LitByteStr","synthetic":true,"types":[]},{"text":"impl Unpin for LitChar","synthetic":true,"types":[]},{"text":"impl Unpin for LitFloat","synthetic":true,"types":[]},{"text":"impl Unpin for LitInt","synthetic":true,"types":[]},{"text":"impl Unpin for LitStr","synthetic":true,"types":[]},{"text":"impl Unpin for Macro","synthetic":true,"types":[]},{"text":"impl Unpin for DataEnum","synthetic":true,"types":[]},{"text":"impl Unpin for DataStruct","synthetic":true,"types":[]},{"text":"impl Unpin for DataUnion","synthetic":true,"types":[]},{"text":"impl Unpin for DeriveInput","synthetic":true,"types":[]},{"text":"impl Unpin for Block","synthetic":true,"types":[]},{"text":"impl Unpin for Local","synthetic":true,"types":[]},{"text":"impl Unpin for Abi","synthetic":true,"types":[]},{"text":"impl Unpin for BareFnArg","synthetic":true,"types":[]},{"text":"impl Unpin for TypeArray","synthetic":true,"types":[]},{"text":"impl Unpin for TypeBareFn","synthetic":true,"types":[]},{"text":"impl Unpin for TypeGroup","synthetic":true,"types":[]},{"text":"impl Unpin for TypeImplTrait","synthetic":true,"types":[]},{"text":"impl Unpin for TypeInfer","synthetic":true,"types":[]},{"text":"impl Unpin for TypeMacro","synthetic":true,"types":[]},{"text":"impl Unpin for TypeNever","synthetic":true,"types":[]},{"text":"impl Unpin for TypeParen","synthetic":true,"types":[]},{"text":"impl Unpin for TypePath","synthetic":true,"types":[]},{"text":"impl Unpin for TypePtr","synthetic":true,"types":[]},{"text":"impl Unpin for TypeReference","synthetic":true,"types":[]},{"text":"impl Unpin for TypeSlice","synthetic":true,"types":[]},{"text":"impl Unpin for TypeTraitObject","synthetic":true,"types":[]},{"text":"impl Unpin for TypeTuple","synthetic":true,"types":[]},{"text":"impl Unpin for Variadic","synthetic":true,"types":[]},{"text":"impl Unpin for FieldPat","synthetic":true,"types":[]},{"text":"impl Unpin for PatBox","synthetic":true,"types":[]},{"text":"impl Unpin for PatIdent","synthetic":true,"types":[]},{"text":"impl Unpin for PatLit","synthetic":true,"types":[]},{"text":"impl Unpin for PatMacro","synthetic":true,"types":[]},{"text":"impl Unpin for PatOr","synthetic":true,"types":[]},{"text":"impl Unpin for PatPath","synthetic":true,"types":[]},{"text":"impl Unpin for PatRange","synthetic":true,"types":[]},{"text":"impl Unpin for PatReference","synthetic":true,"types":[]},{"text":"impl Unpin for PatRest","synthetic":true,"types":[]},{"text":"impl Unpin for PatSlice","synthetic":true,"types":[]},{"text":"impl Unpin for PatStruct","synthetic":true,"types":[]},{"text":"impl Unpin for PatTuple","synthetic":true,"types":[]},{"text":"impl Unpin for PatTupleStruct","synthetic":true,"types":[]},{"text":"impl Unpin for PatType","synthetic":true,"types":[]},{"text":"impl Unpin for PatWild","synthetic":true,"types":[]},{"text":"impl Unpin for AngleBracketedGenericArguments","synthetic":true,"types":[]},{"text":"impl Unpin for Binding","synthetic":true,"types":[]},{"text":"impl Unpin for Constraint","synthetic":true,"types":[]},{"text":"impl Unpin for ParenthesizedGenericArguments","synthetic":true,"types":[]},{"text":"impl Unpin for Path","synthetic":true,"types":[]},{"text":"impl Unpin for PathSegment","synthetic":true,"types":[]},{"text":"impl Unpin for QSelf","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for AttrStyle","synthetic":true,"types":[]},{"text":"impl Unpin for Meta","synthetic":true,"types":[]},{"text":"impl Unpin for NestedMeta","synthetic":true,"types":[]},{"text":"impl Unpin for Fields","synthetic":true,"types":[]},{"text":"impl Unpin for Visibility","synthetic":true,"types":[]},{"text":"impl Unpin for GenericMethodArgument","synthetic":true,"types":[]},{"text":"impl Unpin for RangeLimits","synthetic":true,"types":[]},{"text":"impl Unpin for Expr","synthetic":true,"types":[]},{"text":"impl Unpin for Member","synthetic":true,"types":[]},{"text":"impl Unpin for GenericParam","synthetic":true,"types":[]},{"text":"impl Unpin for TraitBoundModifier","synthetic":true,"types":[]},{"text":"impl Unpin for TypeParamBound","synthetic":true,"types":[]},{"text":"impl Unpin for WherePredicate","synthetic":true,"types":[]},{"text":"impl Unpin for FnArg","synthetic":true,"types":[]},{"text":"impl Unpin for ForeignItem","synthetic":true,"types":[]},{"text":"impl Unpin for ImplItem","synthetic":true,"types":[]},{"text":"impl Unpin for Item","synthetic":true,"types":[]},{"text":"impl Unpin for TraitItem","synthetic":true,"types":[]},{"text":"impl Unpin for UseTree","synthetic":true,"types":[]},{"text":"impl Unpin for Lit","synthetic":true,"types":[]},{"text":"impl Unpin for StrStyle","synthetic":true,"types":[]},{"text":"impl Unpin for MacroDelimiter","synthetic":true,"types":[]},{"text":"impl Unpin for Data","synthetic":true,"types":[]},{"text":"impl Unpin for BinOp","synthetic":true,"types":[]},{"text":"impl Unpin for UnOp","synthetic":true,"types":[]},{"text":"impl Unpin for Stmt","synthetic":true,"types":[]},{"text":"impl Unpin for ReturnType","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl Unpin for Pat","synthetic":true,"types":[]},{"text":"impl Unpin for GenericArgument","synthetic":true,"types":[]},{"text":"impl Unpin for PathArguments","synthetic":true,"types":[]},{"text":"impl Unpin for Underscore","synthetic":true,"types":[]},{"text":"impl Unpin for Abstract","synthetic":true,"types":[]},{"text":"impl Unpin for As","synthetic":true,"types":[]},{"text":"impl Unpin for Async","synthetic":true,"types":[]},{"text":"impl Unpin for Auto","synthetic":true,"types":[]},{"text":"impl Unpin for Await","synthetic":true,"types":[]},{"text":"impl Unpin for Become","synthetic":true,"types":[]},{"text":"impl Unpin for Box","synthetic":true,"types":[]},{"text":"impl Unpin for Break","synthetic":true,"types":[]},{"text":"impl Unpin for Const","synthetic":true,"types":[]},{"text":"impl Unpin for Continue","synthetic":true,"types":[]},{"text":"impl Unpin for Crate","synthetic":true,"types":[]},{"text":"impl Unpin for Default","synthetic":true,"types":[]},{"text":"impl Unpin for Do","synthetic":true,"types":[]},{"text":"impl Unpin for Dyn","synthetic":true,"types":[]},{"text":"impl Unpin for Else","synthetic":true,"types":[]},{"text":"impl Unpin for Enum","synthetic":true,"types":[]},{"text":"impl Unpin for Extern","synthetic":true,"types":[]},{"text":"impl Unpin for Final","synthetic":true,"types":[]},{"text":"impl Unpin for Fn","synthetic":true,"types":[]},{"text":"impl Unpin for For","synthetic":true,"types":[]},{"text":"impl Unpin for If","synthetic":true,"types":[]},{"text":"impl Unpin for Impl","synthetic":true,"types":[]},{"text":"impl Unpin for In","synthetic":true,"types":[]},{"text":"impl Unpin for Let","synthetic":true,"types":[]},{"text":"impl Unpin for Loop","synthetic":true,"types":[]},{"text":"impl Unpin for Macro","synthetic":true,"types":[]},{"text":"impl Unpin for Match","synthetic":true,"types":[]},{"text":"impl Unpin for Mod","synthetic":true,"types":[]},{"text":"impl Unpin for Move","synthetic":true,"types":[]},{"text":"impl Unpin for Mut","synthetic":true,"types":[]},{"text":"impl Unpin for Override","synthetic":true,"types":[]},{"text":"impl Unpin for Priv","synthetic":true,"types":[]},{"text":"impl Unpin for Pub","synthetic":true,"types":[]},{"text":"impl Unpin for Ref","synthetic":true,"types":[]},{"text":"impl Unpin for Return","synthetic":true,"types":[]},{"text":"impl Unpin for SelfType","synthetic":true,"types":[]},{"text":"impl Unpin for SelfValue","synthetic":true,"types":[]},{"text":"impl Unpin for Static","synthetic":true,"types":[]},{"text":"impl Unpin for Struct","synthetic":true,"types":[]},{"text":"impl Unpin for Super","synthetic":true,"types":[]},{"text":"impl Unpin for Trait","synthetic":true,"types":[]},{"text":"impl Unpin for Try","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl Unpin for Typeof","synthetic":true,"types":[]},{"text":"impl Unpin for Union","synthetic":true,"types":[]},{"text":"impl Unpin for Unsafe","synthetic":true,"types":[]},{"text":"impl Unpin for Unsized","synthetic":true,"types":[]},{"text":"impl Unpin for Use","synthetic":true,"types":[]},{"text":"impl Unpin for Virtual","synthetic":true,"types":[]},{"text":"impl Unpin for Where","synthetic":true,"types":[]},{"text":"impl Unpin for While","synthetic":true,"types":[]},{"text":"impl Unpin for Yield","synthetic":true,"types":[]},{"text":"impl Unpin for Add","synthetic":true,"types":[]},{"text":"impl Unpin for AddEq","synthetic":true,"types":[]},{"text":"impl Unpin for And","synthetic":true,"types":[]},{"text":"impl Unpin for AndAnd","synthetic":true,"types":[]},{"text":"impl Unpin for AndEq","synthetic":true,"types":[]},{"text":"impl Unpin for At","synthetic":true,"types":[]},{"text":"impl Unpin for Bang","synthetic":true,"types":[]},{"text":"impl Unpin for Caret","synthetic":true,"types":[]},{"text":"impl Unpin for CaretEq","synthetic":true,"types":[]},{"text":"impl Unpin for Colon","synthetic":true,"types":[]},{"text":"impl Unpin for Colon2","synthetic":true,"types":[]},{"text":"impl Unpin for Comma","synthetic":true,"types":[]},{"text":"impl Unpin for Div","synthetic":true,"types":[]},{"text":"impl Unpin for DivEq","synthetic":true,"types":[]},{"text":"impl Unpin for Dollar","synthetic":true,"types":[]},{"text":"impl Unpin for Dot","synthetic":true,"types":[]},{"text":"impl Unpin for Dot2","synthetic":true,"types":[]},{"text":"impl Unpin for Dot3","synthetic":true,"types":[]},{"text":"impl Unpin for DotDotEq","synthetic":true,"types":[]},{"text":"impl Unpin for Eq","synthetic":true,"types":[]},{"text":"impl Unpin for EqEq","synthetic":true,"types":[]},{"text":"impl Unpin for Ge","synthetic":true,"types":[]},{"text":"impl Unpin for Gt","synthetic":true,"types":[]},{"text":"impl Unpin for Le","synthetic":true,"types":[]},{"text":"impl Unpin for Lt","synthetic":true,"types":[]},{"text":"impl Unpin for MulEq","synthetic":true,"types":[]},{"text":"impl Unpin for Ne","synthetic":true,"types":[]},{"text":"impl Unpin for Or","synthetic":true,"types":[]},{"text":"impl Unpin for OrEq","synthetic":true,"types":[]},{"text":"impl Unpin for OrOr","synthetic":true,"types":[]},{"text":"impl Unpin for Pound","synthetic":true,"types":[]},{"text":"impl Unpin for Question","synthetic":true,"types":[]},{"text":"impl Unpin for RArrow","synthetic":true,"types":[]},{"text":"impl Unpin for LArrow","synthetic":true,"types":[]},{"text":"impl Unpin for Rem","synthetic":true,"types":[]},{"text":"impl Unpin for RemEq","synthetic":true,"types":[]},{"text":"impl Unpin for FatArrow","synthetic":true,"types":[]},{"text":"impl Unpin for Semi","synthetic":true,"types":[]},{"text":"impl Unpin for Shl","synthetic":true,"types":[]},{"text":"impl Unpin for ShlEq","synthetic":true,"types":[]},{"text":"impl Unpin for Shr","synthetic":true,"types":[]},{"text":"impl Unpin for ShrEq","synthetic":true,"types":[]},{"text":"impl Unpin for Star","synthetic":true,"types":[]},{"text":"impl Unpin for Sub","synthetic":true,"types":[]},{"text":"impl Unpin for SubEq","synthetic":true,"types":[]},{"text":"impl Unpin for Tilde","synthetic":true,"types":[]},{"text":"impl Unpin for Brace","synthetic":true,"types":[]},{"text":"impl Unpin for Bracket","synthetic":true,"types":[]},{"text":"impl Unpin for Paren","synthetic":true,"types":[]},{"text":"impl Unpin for Group","synthetic":true,"types":[]},{"text":"impl Unpin for TokenBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Unpin for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Unpin for Pairs&lt;'a, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Unpin for PairsMut&lt;'a, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Unpin for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Unpin for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Lookahead1&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ParseBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'a&gt; Unpin for StepCursor&lt;'c, 'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Nothing","synthetic":true,"types":[]}];
implementors["wasi_common"] = [{"text":"impl Unpin for WasiCtx","synthetic":true,"types":[]},{"text":"impl Unpin for WasiCtxBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for HandleRights","synthetic":true,"types":[]},{"text":"impl Unpin for OsDir","synthetic":true,"types":[]},{"text":"impl Unpin for OsFile","synthetic":true,"types":[]},{"text":"impl Unpin for OsOther","synthetic":true,"types":[]},{"text":"impl Unpin for WasiCtxBuilderError","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;'ctx&gt; Unpin for Dir&lt;'ctx&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DirBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for DirEntry","synthetic":true,"types":[]},{"text":"impl&lt;'ctx&gt; Unpin for File&lt;'ctx&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for FileType","synthetic":true,"types":[]},{"text":"impl Unpin for Metadata","synthetic":true,"types":[]},{"text":"impl Unpin for OpenOptions","synthetic":true,"types":[]},{"text":"impl Unpin for Permissions","synthetic":true,"types":[]},{"text":"impl Unpin for ReadDir","synthetic":true,"types":[]},{"text":"impl Unpin for WasiCtx","synthetic":true,"types":[]},{"text":"impl Unpin for WasiCtxBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for __wasi_dirent_t","synthetic":true,"types":[]},{"text":"impl Unpin for __wasi_fdstat_t","synthetic":true,"types":[]},{"text":"impl Unpin for __wasi_filestat_t","synthetic":true,"types":[]},{"text":"impl Unpin for __wasi_event_fd_readwrite_t","synthetic":true,"types":[]},{"text":"impl Unpin for __wasi_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for __wasi_subscription_clock_t","synthetic":true,"types":[]},{"text":"impl Unpin for __wasi_subscription_fd_readwrite_t","synthetic":true,"types":[]},{"text":"impl Unpin for __wasi_subscription_u_t","synthetic":true,"types":[]},{"text":"impl Unpin for __wasi_subscription_t","synthetic":true,"types":[]},{"text":"impl Unpin for __wasi_subscription_u_u_t","synthetic":true,"types":[]},{"text":"impl Unpin for WasiError","synthetic":true,"types":[]},{"text":"impl Unpin for __wasi_iovec_t","synthetic":true,"types":[]},{"text":"impl Unpin for __wasi_ciovec_t","synthetic":true,"types":[]},{"text":"impl Unpin for __wasi_prestat_dir_t","synthetic":true,"types":[]},{"text":"impl Unpin for __wasi_prestat_t","synthetic":true,"types":[]},{"text":"impl Unpin for __wasi_prestat_u_t","synthetic":true,"types":[]},{"text":"impl Unpin for VecFileContents","synthetic":true,"types":[]},{"text":"impl Unpin for InMemoryFile","synthetic":true,"types":[]},{"text":"impl Unpin for VirtualDir","synthetic":true,"types":[]},{"text":"impl Unpin for VirtualDirEntry","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for ReadPipe&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for WritePipe&lt;W&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Rights","synthetic":true,"types":[]},{"text":"impl Unpin for Fd","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Iovec&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Ciovec&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Dirent","synthetic":true,"types":[]},{"text":"impl Unpin for Fdflags","synthetic":true,"types":[]},{"text":"impl Unpin for Fdstat","synthetic":true,"types":[]},{"text":"impl Unpin for Fstflags","synthetic":true,"types":[]},{"text":"impl Unpin for Lookupflags","synthetic":true,"types":[]},{"text":"impl Unpin for Oflags","synthetic":true,"types":[]},{"text":"impl Unpin for Filestat","synthetic":true,"types":[]},{"text":"impl Unpin for Eventrwflags","synthetic":true,"types":[]},{"text":"impl Unpin for EventFdReadwrite","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for Subclockflags","synthetic":true,"types":[]},{"text":"impl Unpin for SubscriptionClock","synthetic":true,"types":[]},{"text":"impl Unpin for SubscriptionFdReadwrite","synthetic":true,"types":[]},{"text":"impl Unpin for Subscription","synthetic":true,"types":[]},{"text":"impl Unpin for Riflags","synthetic":true,"types":[]},{"text":"impl Unpin for Roflags","synthetic":true,"types":[]},{"text":"impl Unpin for Sdflags","synthetic":true,"types":[]},{"text":"impl Unpin for PrestatDir","synthetic":true,"types":[]},{"text":"impl Unpin for Clockid","synthetic":true,"types":[]},{"text":"impl Unpin for Errno","synthetic":true,"types":[]},{"text":"impl Unpin for Whence","synthetic":true,"types":[]},{"text":"impl Unpin for Filetype","synthetic":true,"types":[]},{"text":"impl Unpin for Advice","synthetic":true,"types":[]},{"text":"impl Unpin for Eventtype","synthetic":true,"types":[]},{"text":"impl Unpin for SubscriptionU","synthetic":true,"types":[]},{"text":"impl Unpin for Signal","synthetic":true,"types":[]},{"text":"impl Unpin for Preopentype","synthetic":true,"types":[]},{"text":"impl Unpin for Prestat","synthetic":true,"types":[]}];
implementors["wasmtime"] = [{"text":"impl Unpin for Global","synthetic":true,"types":[]},{"text":"impl Unpin for Table","synthetic":true,"types":[]},{"text":"impl Unpin for Memory","synthetic":true,"types":[]},{"text":"impl&lt;'instance&gt; Unpin for Export&lt;'instance&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for FrameInfo","synthetic":true,"types":[]},{"text":"impl Unpin for Func","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Caller&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Instance","synthetic":true,"types":[]},{"text":"impl Unpin for Linker","synthetic":true,"types":[]},{"text":"impl Unpin for Module","synthetic":true,"types":[]},{"text":"impl Unpin for ExternRef","synthetic":true,"types":[]},{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl Unpin for Engine","synthetic":true,"types":[]},{"text":"impl Unpin for Store","synthetic":true,"types":[]},{"text":"impl Unpin for InterruptHandle","synthetic":true,"types":[]},{"text":"impl Unpin for Trap","synthetic":true,"types":[]},{"text":"impl Unpin for Limits","synthetic":true,"types":[]},{"text":"impl Unpin for FuncType","synthetic":true,"types":[]},{"text":"impl Unpin for GlobalType","synthetic":true,"types":[]},{"text":"impl Unpin for TableType","synthetic":true,"types":[]},{"text":"impl Unpin for MemoryType","synthetic":true,"types":[]},{"text":"impl&lt;'module&gt; Unpin for ImportType&lt;'module&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'module&gt; Unpin for ExportType&lt;'module&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Extern","synthetic":true,"types":[]},{"text":"impl Unpin for Strategy","synthetic":true,"types":[]},{"text":"impl Unpin for OptLevel","synthetic":true,"types":[]},{"text":"impl Unpin for ProfilingStrategy","synthetic":true,"types":[]},{"text":"impl Unpin for Mutability","synthetic":true,"types":[]},{"text":"impl Unpin for ValType","synthetic":true,"types":[]},{"text":"impl Unpin for ExternType","synthetic":true,"types":[]},{"text":"impl Unpin for Val","synthetic":true,"types":[]}];
implementors["wasmtime_cache"] = [{"text":"impl Unpin for CacheConfig","synthetic":true,"types":[]},{"text":"impl&lt;'config&gt; Unpin for ModuleCacheEntry&lt;'config&gt;","synthetic":true,"types":[]}];
implementors["wasmtime_cranelift"] = [{"text":"impl Unpin for Cranelift","synthetic":true,"types":[]}];
implementors["wasmtime_debug"] = [{"text":"impl Unpin for DwarfSection","synthetic":true,"types":[]},{"text":"impl Unpin for DwarfSectionRelocTarget","synthetic":true,"types":[]}];
implementors["wasmtime_environ"] = [{"text":"impl Unpin for InstructionAddressMap","synthetic":true,"types":[]},{"text":"impl Unpin for FunctionAddressMap","synthetic":true,"types":[]},{"text":"impl Unpin for BuiltinFunctionIndex","synthetic":true,"types":[]},{"text":"impl Unpin for CompiledFunction","synthetic":true,"types":[]},{"text":"impl Unpin for Relocation","synthetic":true,"types":[]},{"text":"impl Unpin for TrapInformation","synthetic":true,"types":[]},{"text":"impl Unpin for StackMapInformation","synthetic":true,"types":[]},{"text":"impl Unpin for MemoryPlan","synthetic":true,"types":[]},{"text":"impl Unpin for Module","synthetic":true,"types":[]},{"text":"impl Unpin for TableElements","synthetic":true,"types":[]},{"text":"impl Unpin for TablePlan","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Unpin for ModuleEnvironment&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Unpin for ModuleTranslation&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for FunctionBodyData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DebugInfoData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for NameSection&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for WasmFileInfo","synthetic":true,"types":[]},{"text":"impl Unpin for FunctionMetadata","synthetic":true,"types":[]},{"text":"impl Unpin for DataInitializerLocation","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Unpin for DataInitializer&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Tunables","synthetic":true,"types":[]},{"text":"impl Unpin for TargetSharedSignatureIndex","synthetic":true,"types":[]},{"text":"impl Unpin for VMOffsets","synthetic":true,"types":[]},{"text":"impl Unpin for ModuleMemoryOffset","synthetic":true,"types":[]},{"text":"impl Unpin for RelocationTarget","synthetic":true,"types":[]},{"text":"impl Unpin for CompileError","synthetic":true,"types":[]},{"text":"impl Unpin for EntityIndex","synthetic":true,"types":[]},{"text":"impl Unpin for MemoryStyle","synthetic":true,"types":[]},{"text":"impl Unpin for TableStyle","synthetic":true,"types":[]}];
implementors["wasmtime_fuzzing"] = [{"text":"impl Unpin for DifferentialConfig","synthetic":true,"types":[]},{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl Unpin for SpecTest","synthetic":true,"types":[]},{"text":"impl Unpin for TableOps","synthetic":true,"types":[]}];
implementors["wasmtime_jit"] = [{"text":"impl Unpin for CodeMemory","synthetic":true,"types":[]},{"text":"impl Unpin for Compilation","synthetic":true,"types":[]},{"text":"impl Unpin for Compiler","synthetic":true,"types":[]},{"text":"impl Unpin for CompilationArtifacts","synthetic":true,"types":[]},{"text":"impl Unpin for CompiledModule","synthetic":true,"types":[]},{"text":"impl Unpin for CompilationStrategy","synthetic":true,"types":[]},{"text":"impl Unpin for SetupError","synthetic":true,"types":[]},{"text":"impl Unpin for TrampolineRelocSink","synthetic":true,"types":[]}];
implementors["wasmtime_lightbeam"] = [{"text":"impl Unpin for Lightbeam","synthetic":true,"types":[]}];
implementors["wasmtime_obj"] = [{"text":"impl&lt;'a&gt; Unpin for ObjectBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ObjectBuilderTarget","synthetic":true,"types":[]}];
implementors["wasmtime_profiling"] = [{"text":"impl Unpin for JitDumpAgent","synthetic":true,"types":[]},{"text":"impl Unpin for VTuneAgent","synthetic":true,"types":[]},{"text":"impl Unpin for NullProfilerAgent","synthetic":true,"types":[]}];
implementors["wasmtime_runtime"] = [{"text":"impl Unpin for ExportFunction","synthetic":true,"types":[]},{"text":"impl Unpin for ExportTable","synthetic":true,"types":[]},{"text":"impl Unpin for ExportMemory","synthetic":true,"types":[]},{"text":"impl Unpin for ExportGlobal","synthetic":true,"types":[]},{"text":"impl Unpin for VMExternRef","synthetic":true,"types":[]},{"text":"impl Unpin for VMExternRefActivationsTable","synthetic":true,"types":[]},{"text":"impl Unpin for StackMapRegistry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Imports&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for InstanceHandle","synthetic":true,"types":[]},{"text":"impl Unpin for LinkError","synthetic":true,"types":[]},{"text":"impl Unpin for GdbJitImageRegistration","synthetic":true,"types":[]},{"text":"impl Unpin for Mmap","synthetic":true,"types":[]},{"text":"impl Unpin for SignatureRegistry","synthetic":true,"types":[]},{"text":"impl Unpin for Table","synthetic":true,"types":[]},{"text":"impl Unpin for VMCallerCheckedAnyfunc","synthetic":true,"types":[]},{"text":"impl Unpin for VMContext","synthetic":true,"types":[]},{"text":"impl Unpin for VMFunctionBody","synthetic":true,"types":[]},{"text":"impl Unpin for VMFunctionImport","synthetic":true,"types":[]},{"text":"impl Unpin for VMGlobalDefinition","synthetic":true,"types":[]},{"text":"impl Unpin for VMGlobalImport","synthetic":true,"types":[]},{"text":"impl Unpin for VMInterrupts","synthetic":true,"types":[]},{"text":"impl Unpin for VMInvokeArgument","synthetic":true,"types":[]},{"text":"impl Unpin for VMMemoryDefinition","synthetic":true,"types":[]},{"text":"impl Unpin for VMMemoryImport","synthetic":true,"types":[]},{"text":"impl Unpin for VMSharedSignatureIndex","synthetic":true,"types":[]},{"text":"impl Unpin for VMTableDefinition","synthetic":true,"types":[]},{"text":"impl Unpin for VMTableImport","synthetic":true,"types":[]},{"text":"impl Unpin for Export","synthetic":true,"types":[]},{"text":"impl Unpin for InstantiationError","synthetic":true,"types":[]},{"text":"impl Unpin for TableElement","synthetic":true,"types":[]},{"text":"impl Unpin for Trap","synthetic":true,"types":[]}];
implementors["wasmtime_wasi"] = [{"text":"impl Unpin for Wasi","synthetic":true,"types":[]},{"text":"impl Unpin for Wasi","synthetic":true,"types":[]}];
implementors["wasmtime_wast"] = [{"text":"impl Unpin for WastContext","synthetic":true,"types":[]}];
implementors["wasmtime_wiggle"] = [{"text":"impl Unpin for WasmtimeGuestMemory","synthetic":true,"types":[]}];
implementors["wiggle"] = [{"text":"impl Unpin for Region","synthetic":true,"types":[]},{"text":"impl Unpin for BorrowHandle","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for GuestPtr&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Pointee&gt;::Pointer: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for GuestSlice&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for GuestStr&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for GuestError","synthetic":true,"types":[]}];
implementors["wiggle_generate"] = [{"text":"impl Unpin for ErrorTransform","synthetic":true,"types":[]},{"text":"impl Unpin for UserErrorType","synthetic":true,"types":[]},{"text":"impl Unpin for Names","synthetic":true,"types":[]},{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl Unpin for Paths","synthetic":true,"types":[]},{"text":"impl Unpin for Literal","synthetic":true,"types":[]},{"text":"impl Unpin for CtxConf","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorConf","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorConfField","synthetic":true,"types":[]},{"text":"impl Unpin for ConfigField","synthetic":true,"types":[]},{"text":"impl Unpin for WitxConf","synthetic":true,"types":[]}];
implementors["wiggle_test"] = [{"text":"impl Unpin for MemAreas","synthetic":true,"types":[]},{"text":"impl Unpin for HostMemory","synthetic":true,"types":[]},{"text":"impl Unpin for MemArea","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for WasiCtx&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["witx"] = [{"text":"impl Unpin for Document","synthetic":true,"types":[]},{"text":"impl Unpin for EnumDatatype","synthetic":true,"types":[]},{"text":"impl Unpin for EnumVariant","synthetic":true,"types":[]},{"text":"impl Unpin for FlagsDatatype","synthetic":true,"types":[]},{"text":"impl Unpin for FlagsMember","synthetic":true,"types":[]},{"text":"impl Unpin for HandleDatatype","synthetic":true,"types":[]},{"text":"impl Unpin for Id","synthetic":true,"types":[]},{"text":"impl Unpin for IntConst","synthetic":true,"types":[]},{"text":"impl Unpin for IntDatatype","synthetic":true,"types":[]},{"text":"impl Unpin for InterfaceFunc","synthetic":true,"types":[]},{"text":"impl Unpin for InterfaceFuncParam","synthetic":true,"types":[]},{"text":"impl Unpin for Module","synthetic":true,"types":[]},{"text":"impl Unpin for ModuleImport","synthetic":true,"types":[]},{"text":"impl Unpin for NamedType","synthetic":true,"types":[]},{"text":"impl Unpin for StructDatatype","synthetic":true,"types":[]},{"text":"impl Unpin for StructMember","synthetic":true,"types":[]},{"text":"impl Unpin for UnionDatatype","synthetic":true,"types":[]},{"text":"impl Unpin for UnionVariant","synthetic":true,"types":[]},{"text":"impl Unpin for CoreFuncType","synthetic":true,"types":[]},{"text":"impl Unpin for CoreParamType","synthetic":true,"types":[]},{"text":"impl Unpin for Filesystem","synthetic":true,"types":[]},{"text":"impl Unpin for MockFs","synthetic":true,"types":[]},{"text":"impl Unpin for SizeAlign","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StructMemberLayout&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for UnionLayout","synthetic":true,"types":[]},{"text":"impl Unpin for Location","synthetic":true,"types":[]},{"text":"impl Unpin for BuiltinType","synthetic":true,"types":[]},{"text":"impl Unpin for Definition","synthetic":true,"types":[]},{"text":"impl Unpin for Entry","synthetic":true,"types":[]},{"text":"impl Unpin for IntRepr","synthetic":true,"types":[]},{"text":"impl Unpin for InterfaceFuncParamPosition","synthetic":true,"types":[]},{"text":"impl Unpin for ModuleDefinition","synthetic":true,"types":[]},{"text":"impl Unpin for ModuleEntry","synthetic":true,"types":[]},{"text":"impl Unpin for ModuleImportVariant","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl Unpin for TypeRef","synthetic":true,"types":[]},{"text":"impl Unpin for AtomType","synthetic":true,"types":[]},{"text":"impl Unpin for CoreParamSignifies","synthetic":true,"types":[]},{"text":"impl Unpin for TypePassedBy","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DeclSyntax&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SExpr","synthetic":true,"types":[]},{"text":"impl Unpin for RepEquality","synthetic":true,"types":[]},{"text":"impl Unpin for ValidationError","synthetic":true,"types":[]},{"text":"impl Unpin for WitxError","synthetic":true,"types":[]},{"text":"impl Unpin for Polyfill","synthetic":true,"types":[]},{"text":"impl Unpin for ModulePolyfill","synthetic":true,"types":[]},{"text":"impl Unpin for FuncPolyfill","synthetic":true,"types":[]},{"text":"impl Unpin for ParamPolyfill","synthetic":true,"types":[]},{"text":"impl Unpin for PolyfillError","synthetic":true,"types":[]},{"text":"impl Unpin for ParamUnknown","synthetic":true,"types":[]},{"text":"impl Unpin for TypePolyfill","synthetic":true,"types":[]}];
implementors["yanix"] = [{"text":"impl Unpin for ClockId","synthetic":true,"types":[]},{"text":"impl Unpin for Dir","synthetic":true,"types":[]},{"text":"impl Unpin for Entry","synthetic":true,"types":[]},{"text":"impl Unpin for SeekLoc","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DirIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for FdFlags","synthetic":true,"types":[]},{"text":"impl Unpin for AtFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Mode","synthetic":true,"types":[]},{"text":"impl Unpin for OFlags","synthetic":true,"types":[]},{"text":"impl Unpin for FileType","synthetic":true,"types":[]},{"text":"impl Unpin for FileTime","synthetic":true,"types":[]},{"text":"impl Unpin for PollFlags","synthetic":true,"types":[]},{"text":"impl Unpin for PollFd","synthetic":true,"types":[]},{"text":"impl Unpin for SockType","synthetic":true,"types":[]},{"text":"impl Unpin for PosixFadviseAdvice","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()