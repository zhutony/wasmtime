(function() {var implementors = {};
implementors["clif_util"] = [{"text":"impl Error for FileInterpreterFailure","synthetic":false,"types":[]}];
implementors["cranelift_codegen"] = [{"text":"impl Error for RegisterMappingError","synthetic":false,"types":[]},{"text":"impl Error for LookupError","synthetic":false,"types":[]},{"text":"impl Error for SetError","synthetic":false,"types":[]},{"text":"impl Error for VerifierError","synthetic":false,"types":[]},{"text":"impl Error for VerifierErrors","synthetic":false,"types":[]},{"text":"impl Error for CodegenError","synthetic":false,"types":[]}];
implementors["cranelift_interpreter"] = [{"text":"impl Error for Trap","synthetic":false,"types":[]}];
implementors["cranelift_module"] = [{"text":"impl Error for ModuleError","synthetic":false,"types":[]}];
implementors["cranelift_reader"] = [{"text":"impl Error for ParseError","synthetic":false,"types":[]},{"text":"impl Error for DataValueCastFailure","synthetic":false,"types":[]}];
implementors["cranelift_wasm"] = [{"text":"impl Error for WasmError","synthetic":false,"types":[]}];
implementors["lightbeam"] = [{"text":"impl Error for ExecutionError","synthetic":false,"types":[]}];
implementors["peepmatic"] = [{"text":"impl Error for VerifyError","synthetic":false,"types":[]}];
implementors["peepmatic_runtime"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["serde"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["wasi_common"] = [{"text":"impl Error for WasiCtxBuilderError","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for WasiError","synthetic":false,"types":[]}];
implementors["wasmtime"] = [{"text":"impl Error for Trap","synthetic":false,"types":[]}];
implementors["wasmtime_environ"] = [{"text":"impl Error for CompileError","synthetic":false,"types":[]}];
implementors["wasmtime_jit"] = [{"text":"impl Error for SetupError","synthetic":false,"types":[]}];
implementors["wasmtime_runtime"] = [{"text":"impl Error for LinkError","synthetic":false,"types":[]},{"text":"impl Error for InstantiationError","synthetic":false,"types":[]}];
implementors["wiggle"] = [{"text":"impl Error for GuestError","synthetic":false,"types":[]}];
implementors["witx"] = [{"text":"impl Error for PolyfillError","synthetic":false,"types":[]},{"text":"impl Error for ValidationError","synthetic":false,"types":[]},{"text":"impl Error for WitxError","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()